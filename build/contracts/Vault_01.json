{
  "contractName": "Vault_01",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "reum",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticket_contract",
      "outputs": [
        {
          "internalType": "contract REUM_ticket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticket_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimable",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_claimable",
          "type": "uint256"
        }
      ],
      "name": "pending_tickets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reum\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_claimable\",\"type\":\"uint256\"}],\"name\":\"pending_tickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticket_contract\",\"outputs\":[{\"internalType\":\"contract REUM_ticket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticket_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"DrGorilla_md (Tg/Twtr)\",\"details\":\"contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms on a per-asset basis. Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT\",\"kind\":\"dev\",\"methods\":{\"claim(uint256,address,bytes32)\":{\"details\":\"this part is updated as needed then redeployed/proxied by main\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Rewardeum Vault v01\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256,address,bytes32)\":{\"notice\":\"custom claim, only called by the main_contract \"}},\"notice\":\"vault: minting lottery tickets to win $rsun NFT\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Vault_01.sol\":\"Vault_01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba34b5028b6a297467a7364d9af182649dee0611a0f9620ec27ce10647885cad\",\"dweb:/ipfs/QmWhGtHDcAYWA31f3Ze9izeh3SPMRzcFagTUwxExLg3sRc\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/REUM_ticket.sol\":{\"keccak256\":\"0x22f40a375ebb681224613252db917cb3d8591c53073aabe3d1c86e096c2d1256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7614d7a40bfa67fefe1163d723eb080441a8cf0370074376d6955b5c81f256\",\"dweb:/ipfs/QmcECP4YaZfuvD1i5qiQXkzgt1HC19CrPyjWEr1LDaedXc\"]},\"project:/contracts/Vault_01.sol\":{\"keccak256\":\"0xe56a6a4d638ab3f7f8c54457700adb09fddb42ffc3c8540682786a6916333ebe\",\"license\":\"GPL\",\"urls\":[\"bzz-raw://da0e7a84950d581147dd8878a18598c2fecc7cc1c69b8dccd526c45b1c7766b2\",\"dweb:/ipfs/QmSnsNJccbzc9DCpzyU4oELCcnde34eDbuMHZ7PHeS8QyL\"]}},\"version\":1}",
  "bytecode": "0x6080604052660aa87bee53800060015534801561001b57600080fd5b5060405161290338038061290383398101604081905261003a91610109565b60006100446100f8565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b0319166001600160a01b0383161790556040516100b5906100fc565b604051809103906000f0801580156100d1573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b039290921691909117905550610137565b3390565b61204b806108b883390190565b60006020828403121561011a578081fd5b81516001600160a01b0381168114610130578182fd5b9392505050565b610772806101466000396000f3fe60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a61461012c5780638da5cb5b14610141578063f2fde38b14610163578063f504a9d514610183576100a5565b806307da68f5146100aa57806319d41c69146100c15780632f2bcd33146100ec578063306cbb201461010c576100a5565b366100a55760405162461bcd60e51b815260040161009c9061064c565b60405180910390fd5b600080fd5b3480156100b657600080fd5b506100bf610198565b005b3480156100cd57600080fd5b506100d6610241565b6040516100e39190610713565b60405180910390f35b3480156100f857600080fd5b506100d661010736600461058d565b610247565b34801561011857600080fd5b506100d66101273660046105a5565b61025f565b34801561013857600080fd5b506100bf6103d1565b34801561014d57600080fd5b5061015661045a565b6040516100e391906105d9565b34801561016f57600080fd5b506100bf61017e366004610553565b610469565b34801561018f57600080fd5b50610156610529565b6101a0610538565b6001600160a01b03166101b161045a565b6001600160a01b0316146101d75760405162461bcd60e51b815260040161009c906106af565b600360009054906101000a90046001600160a01b03166001600160a01b0316638382ce306040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b50505050565b60015481565b600060015482610257919061071c565b90505b919050565b6002546000906001600160a01b0316331461028c5760405162461bcd60e51b815260040161009c90610678565b632929aaa760e11b8214156103b2576000600154856102ab919061071c565b905060008111801561033e5750600360009054906101000a90046001600160a01b03166001600160a01b0316632014e5d16040518163ffffffff1660e01b815260040160206040518083038186803b15801561030657600080fd5b505afa15801561031a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e919061056d565b156103a8576003546040516352fbfa3360e11b81526001600160a01b039091169063a5f7f4669061037590879085906004016105ed565b600060405180830381600087803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b505050505b60009150506103ca565b60405162461bcd60e51b815260040161009c906106e4565b9392505050565b6103d9610538565b6001600160a01b03166103ea61045a565b6001600160a01b0316146104105760405162461bcd60e51b815260040161009c906106af565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610471610538565b6001600160a01b031661048261045a565b6001600160a01b0316146104a85760405162461bcd60e51b815260040161009c906106af565b6001600160a01b0381166104ce5760405162461bcd60e51b815260040161009c90610606565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b3390565b80356001600160a01b038116811461025a57600080fd5b600060208284031215610564578081fd5b6103ca8261053c565b60006020828403121561057e578081fd5b815180151581146103ca578182fd5b60006020828403121561059e578081fd5b5035919050565b6000806000606084860312156105b9578182fd5b833592506105c96020850161053c565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152715661756c743a206e6f6e2070617961626c6560701b604082015260600190565b6020808252601a908201527f5661756c743a20756e617574686f72697a656420616363657373000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601590820152742b30bab63a1d1024b73b30b634b2103a34b1b5b2b960591b604082015260600190565b90815260200190565b60008261073757634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220cc00faf3c14ad00ae08f042465768263c8c1814f1b58beb8cb578c245a62657f64736f6c63430008000033608060405260c8600d553480156200001657600080fd5b5060408051808201825260078152664c4f545445525960c81b6020808301918252835180850190945260098452682922aaa6bc2929aaa760b91b908401528151919291620000679160009162000128565b5080516200007d90600190602084019062000128565b5050506000620000926200012460201b60201c565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350604051806060016040528060328152602001620020196032913980516200011091600b9160209091019062000128565b50600e805460ff191660011790556200020b565b3390565b8280546200013690620001ce565b90600052602060002090601f0160209004810192826200015a5760008555620001a5565b82601f106200017557805160ff1916838001178555620001a5565b82800160010185558215620001a5579182015b82811115620001a557825182559160200191906001019062000188565b50620001b3929150620001b7565b5090565b5b80821115620001b35760008155600101620001b8565b600281046001821680620001e357607f821691505b602082108114156200020557634e487b7160e01b600052602260045260246000fd5b50919050565b611dfe806200021b6000396000f3fe60806040526004361061016a5760003560e01c806370a08231116100d1578063a5f7f4661161008a578063e5aca89411610064578063e5aca8941461041c578063e8a3d4851461043c578063e985e9c514610451578063f2fde38b1461047157610190565b8063a5f7f466146103bc578063b88d4fde146103dc578063c87b56dd146103fc57610190565b806370a0823114610328578063715018a6146103485780638382ce301461035d5780638da5cb5b1461037257806395d89b4114610387578063a22cb4651461039c57610190565b80632014e5d1116101235780632014e5d11461027357806323b872dd146102885780632f745c59146102a857806342842e0e146102c85780634f6ccce7146102e85780636352211e1461030857610190565b806301ffc9a71461019557806306fdde03146101cb578063081812fc146101ed578063095ea7b31461021a57806318160ddd1461023c5780631c10b8ca1461025e57610190565b366101905760405162461bcd60e51b815260040161018790611bf3565b60405180910390fd5b600080fd5b3480156101a157600080fd5b506101b56101b036600461162c565b610491565b6040516101c2919061175e565b60405180910390f35b3480156101d757600080fd5b506101e06104be565b6040516101c29190611769565b3480156101f957600080fd5b5061020d6102083660046116aa565b610550565b6040516101c2919061170d565b34801561022657600080fd5b5061023a610235366004611603565b610593565b005b34801561024857600080fd5b5061025161062b565b6040516101c29190611cc7565b34801561026a57600080fd5b50610251610631565b34801561027f57600080fd5b506101b5610637565b34801561029457600080fd5b5061023a6102a3366004611515565b610640565b3480156102b457600080fd5b506102516102c3366004611603565b610678565b3480156102d457600080fd5b5061023a6102e3366004611515565b6106ca565b3480156102f457600080fd5b506102516103033660046116aa565b6106e5565b34801561031457600080fd5b5061020d6103233660046116aa565b610740565b34801561033457600080fd5b506102516103433660046114c2565b610775565b34801561035457600080fd5b5061023a6107b9565b34801561036957600080fd5b5061023a610842565b34801561037e57600080fd5b5061020d61088d565b34801561039357600080fd5b506101e061089c565b3480156103a857600080fd5b5061023a6103b73660046115c9565b6108ab565b3480156103c857600080fd5b5061023a6103d7366004611603565b610979565b3480156103e857600080fd5b5061023a6103f7366004611550565b610a75565b34801561040857600080fd5b506101e06104173660046116aa565b610ab4565b34801561042857600080fd5b5061023a610437366004611664565b610afa565b34801561044857600080fd5b506101e0610b50565b34801561045d57600080fd5b506101b561046c3660046114e3565b610b5f565b34801561047d57600080fd5b5061023a61048c3660046114c2565b610b8d565b60006001600160e01b0319821663780e9d6360e01b14806104b657506104b682610c4e565b90505b919050565b6060600080546104cd90611cff565b80601f01602080910402602001604051908101604052809291908181526020018280546104f990611cff565b80156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b5050505050905090565b600061055b82610c8e565b6105775760405162461bcd60e51b815260040161018790611ae8565b506000908152600460205260409020546001600160a01b031690565b600061059e82610740565b9050806001600160a01b0316836001600160a01b031614156105d25760405162461bcd60e51b815260040161018790611bb2565b806001600160a01b03166105e4610cab565b6001600160a01b0316148061060057506106008161046c610cab565b61061c5760405162461bcd60e51b8152600401610187906119c3565b6106268383610caf565b505050565b60085490565b600d5481565b600e5460ff1690565b61065161064b610cab565b82610d1d565b61066d5760405162461bcd60e51b815260040161018790611c2a565b610626838383610da2565b600061068383610775565b82106106a15760405162461bcd60e51b81526004016101879061177c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61062683838360405180602001604052806000815250610a75565b60006106ef61062b565b821061070d5760405162461bcd60e51b815260040161018790611c7b565b6008828154811061072e57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104b65760405162461bcd60e51b815260040161018790611a6a565b60006001600160a01b03821661079d5760405162461bcd60e51b815260040161018790611a20565b506001600160a01b031660009081526003602052604090205490565b6107c1610cab565b6001600160a01b03166107d261088d565b6001600160a01b0316146107f85760405162461bcd60e51b815260040161018790611b34565b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b61084a610cab565b6001600160a01b031661085b61088d565b6001600160a01b0316146108815760405162461bcd60e51b815260040161018790611b34565b600e805460ff19169055565b600a546001600160a01b031690565b6060600180546104cd90611cff565b6108b3610cab565b6001600160a01b0316826001600160a01b031614156108e45760405162461bcd60e51b8152600401610187906118da565b80600560006108f1610cab565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610935610cab565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161096d919061175e565b60405180910390a35050565b610981610cab565b6001600160a01b031661099261088d565b6001600160a01b0316146109b85760405162461bcd60e51b815260040161018790611b34565b600c5463612e9850421015806109cf5750600d5481115b156109df57600e805460ff191690555b600e5460ff16610a015760405162461bcd60e51b815260040161018790611911565b6000600d5483600c54610a149190611cd0565b1015610a205782610a2e565b81600d54610a2e9190611ce8565b905060005b81811015610a6e57600c8054906000610a4b83611d3a565b9190505550610a5c85600c54610ecf565b80610a6681611d3a565b915050610a33565b5050505050565b610a86610a80610cab565b83610d1d565b610aa25760405162461bcd60e51b815260040161018790611c2a565b610aae84848484610fae565b50505050565b6060610abf82610c8e565b610adb5760405162461bcd60e51b815260040161018790611994565b6040518060600160405280602e8152602001611d9b602e913992915050565b610b02610cab565b6001600160a01b0316610b1361088d565b6001600160a01b031614610b395760405162461bcd60e51b815260040161018790611b34565b8051610b4c90600b9060208401906113a2565b5050565b6060600b80546104cd90611cff565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610b95610cab565b6001600160a01b0316610ba661088d565b6001600160a01b031614610bcc5760405162461bcd60e51b815260040161018790611b34565b6001600160a01b038116610bf25760405162461bcd60e51b815260040161018790611819565b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b1480610c7f57506001600160e01b03198216635b5e139f60e01b145b806104b657506104b682610fe1565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ce482610740565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d2882610c8e565b610d445760405162461bcd60e51b815260040161018790611948565b6000610d4f83610740565b9050806001600160a01b0316846001600160a01b03161480610d8a5750836001600160a01b0316610d7f84610550565b6001600160a01b0316145b80610d9a5750610d9a8185610b5f565b949350505050565b826001600160a01b0316610db582610740565b6001600160a01b031614610ddb5760405162461bcd60e51b815260040161018790611b69565b6001600160a01b038216610e015760405162461bcd60e51b815260040161018790611896565b610e0c838383610ffa565b610e17600082610caf565b6001600160a01b0383166000908152600360205260408120805460019290610e40908490611ce8565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e6e908490611cd0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610ef55760405162461bcd60e51b815260040161018790611ab3565b610efe81610c8e565b15610f1b5760405162461bcd60e51b81526004016101879061185f565b610f2760008383610ffa565b6001600160a01b0382166000908152600360205260408120805460019290610f50908490611cd0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610fb9848484610da2565b610fc584848484611083565b610aae5760405162461bcd60e51b8152600401610187906117c7565b6001600160e01b031981166301ffc9a760e01b14919050565b611005838383610626565b6001600160a01b0383166110215761101c8161119e565b611044565b816001600160a01b0316836001600160a01b0316146110445761104483826111e2565b6001600160a01b0382166110605761105b8161127f565b610626565b826001600160a01b0316826001600160a01b031614610626576106268282611358565b6000611097846001600160a01b031661139c565b1561119357836001600160a01b031663150b7a026110b3610cab565b8786866040518563ffffffff1660e01b81526004016110d59493929190611721565b602060405180830381600087803b1580156110ef57600080fd5b505af192505050801561111f575060408051601f3d908101601f1916820190925261111c91810190611648565b60015b611179573d80801561114d576040519150601f19603f3d011682016040523d82523d6000602084013e611152565b606091505b5080516111715760405162461bcd60e51b8152600401610187906117c7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d9a565b506001949350505050565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600060016111ef84610775565b6111f99190611ce8565b60008381526007602052604090205490915080821461124c576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061129190600190611ce8565b600083815260096020526040812054600880549394509092849081106112c757634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600883815481106112f657634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061133c57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600061136383610775565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b3b151590565b8280546113ae90611cff565b90600052602060002090601f0160209004810192826113d05760008555611416565b82601f106113e957805160ff1916838001178555611416565b82800160010185558215611416579182015b828111156114165782518255916020019190600101906113fb565b50611422929150611426565b5090565b5b808211156114225760008155600101611427565b600067ffffffffffffffff8084111561145657611456611d6b565b604051601f8501601f19168101602001828111828210171561147a5761147a611d6b565b60405284815291508183850186101561149257600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b03811681146104b957600080fd5b6000602082840312156114d3578081fd5b6114dc826114ab565b9392505050565b600080604083850312156114f5578081fd5b6114fe836114ab565b915061150c602084016114ab565b90509250929050565b600080600060608486031215611529578081fd5b611532846114ab565b9250611540602085016114ab565b9150604084013590509250925092565b60008060008060808587031215611565578081fd5b61156e856114ab565b935061157c602086016114ab565b925060408501359150606085013567ffffffffffffffff81111561159e578182fd5b8501601f810187136115ae578182fd5b6115bd8782356020840161143b565b91505092959194509250565b600080604083850312156115db578182fd5b6115e4836114ab565b9150602083013580151581146115f8578182fd5b809150509250929050565b60008060408385031215611615578182fd5b61161e836114ab565b946020939093013593505050565b60006020828403121561163d578081fd5b81356114dc81611d81565b600060208284031215611659578081fd5b81516114dc81611d81565b600060208284031215611675578081fd5b813567ffffffffffffffff81111561168b578182fd5b8201601f8101841361169b578182fd5b610d9a8482356020840161143b565b6000602082840312156116bb578081fd5b5035919050565b60008151808452815b818110156116e7576020818501810151868301820152016116cb565b818111156116f85782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611754908301846116c2565b9695505050505050565b901515815260200190565b6000602082526114dc60208301846116c2565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252601a908201527f4d696e74696e67206e6f742061637469766520616e796d6f7265000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526015908201527424b73b30b634b2103a34b1b5b2ba10373ab6b132b960591b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526019908201527f5245554d204c6f74746572793a206e6f6e2070617961626c6500000000000000604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b90815260200190565b60008219821115611ce357611ce3611d55565b500190565b600082821015611cfa57611cfa611d55565b500390565b600281046001821680611d1357607f821691505b60208210811415611d3457634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611d4e57611d4e611d55565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114611d9757600080fd5b5056fe68747470733a2f2f7777772e72657761726465756d2e636f6d2f696d616765732f6d657461646174612e6a736f6ea2646970667358221220bd9a5f435ba52245330626c73796643c31c176a61630a0cbf103216f2666b93664736f6c6343000800003368747470733a2f2f7777772e72657761726465756d2e636f6d2f696d616765732f636f6e74726163745f7572692e6a736f6e",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a61461012c5780638da5cb5b14610141578063f2fde38b14610163578063f504a9d514610183576100a5565b806307da68f5146100aa57806319d41c69146100c15780632f2bcd33146100ec578063306cbb201461010c576100a5565b366100a55760405162461bcd60e51b815260040161009c9061064c565b60405180910390fd5b600080fd5b3480156100b657600080fd5b506100bf610198565b005b3480156100cd57600080fd5b506100d6610241565b6040516100e39190610713565b60405180910390f35b3480156100f857600080fd5b506100d661010736600461058d565b610247565b34801561011857600080fd5b506100d66101273660046105a5565b61025f565b34801561013857600080fd5b506100bf6103d1565b34801561014d57600080fd5b5061015661045a565b6040516100e391906105d9565b34801561016f57600080fd5b506100bf61017e366004610553565b610469565b34801561018f57600080fd5b50610156610529565b6101a0610538565b6001600160a01b03166101b161045a565b6001600160a01b0316146101d75760405162461bcd60e51b815260040161009c906106af565b600360009054906101000a90046001600160a01b03166001600160a01b0316638382ce306040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b50505050565b60015481565b600060015482610257919061071c565b90505b919050565b6002546000906001600160a01b0316331461028c5760405162461bcd60e51b815260040161009c90610678565b632929aaa760e11b8214156103b2576000600154856102ab919061071c565b905060008111801561033e5750600360009054906101000a90046001600160a01b03166001600160a01b0316632014e5d16040518163ffffffff1660e01b815260040160206040518083038186803b15801561030657600080fd5b505afa15801561031a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e919061056d565b156103a8576003546040516352fbfa3360e11b81526001600160a01b039091169063a5f7f4669061037590879085906004016105ed565b600060405180830381600087803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b505050505b60009150506103ca565b60405162461bcd60e51b815260040161009c906106e4565b9392505050565b6103d9610538565b6001600160a01b03166103ea61045a565b6001600160a01b0316146104105760405162461bcd60e51b815260040161009c906106af565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610471610538565b6001600160a01b031661048261045a565b6001600160a01b0316146104a85760405162461bcd60e51b815260040161009c906106af565b6001600160a01b0381166104ce5760405162461bcd60e51b815260040161009c90610606565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b3390565b80356001600160a01b038116811461025a57600080fd5b600060208284031215610564578081fd5b6103ca8261053c565b60006020828403121561057e578081fd5b815180151581146103ca578182fd5b60006020828403121561059e578081fd5b5035919050565b6000806000606084860312156105b9578182fd5b833592506105c96020850161053c565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152715661756c743a206e6f6e2070617961626c6560701b604082015260600190565b6020808252601a908201527f5661756c743a20756e617574686f72697a656420616363657373000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601590820152742b30bab63a1d1024b73b30b634b2103a34b1b5b2b960591b604082015260600190565b90815260200190565b60008261073757634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220cc00faf3c14ad00ae08f042465768263c8c1814f1b58beb8cb578c245a62657f64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:27",
                "type": ""
              }
            ],
            "src": "14:310:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4177:27",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:27",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:27"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:27"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:27",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:27",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:27"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:27"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:27",
                "type": ""
              }
            ],
            "src": "14:175:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:27",
                "type": ""
              }
            ],
            "src": "194:198:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:219:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "521:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "530:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "538:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "523:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "523:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "523:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "496:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "505:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "492:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "492:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "488:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "485:2:27"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "556:29:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "575:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "569:5:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "569:16:27"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "560:5:27",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "647:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "655:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "640:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "640:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "607:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "628:5:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "621:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "621:13:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "614:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "614:21:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "604:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:40:27"
                  },
                  "nodeType": "YulIf",
                  "src": "594:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "673:15:27",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "683:5:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "673:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "441:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "452:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "464:6:27",
                "type": ""
              }
            ],
            "src": "397:297:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "769:120:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "824:6:27"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "832:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "817:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "790:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "811:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "782:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "779:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "850:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "873:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "860:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:23:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "850:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "735:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "746:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "758:6:27",
                "type": ""
              }
            ],
            "src": "699:190:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "998:230:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1044:26:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1053:6:27"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1061:6:27"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1046:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1046:22:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1046:22:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1019:7:27"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1028:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1015:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1015:23:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1040:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1011:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1011:32:27"
                  },
                  "nodeType": "YulIf",
                  "src": "1008:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1079:33:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1102:9:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1089:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1089:23:27"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1079:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1121:50:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1156:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1167:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1152:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1152:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1131:20:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1131:40:27"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1121:6:27"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1180:42:27",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1207:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1218:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1203:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1203:18:27"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1190:12:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1190:32:27"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1180:6:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "948:9:27",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "959:7:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "971:6:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "979:6:27",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "987:6:27",
                "type": ""
              }
            ],
            "src": "894:334:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1334:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1344:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1356:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1367:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1352:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1352:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1344:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1386:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1401:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1417:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1422:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1413:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1413:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1426:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1409:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1409:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1397:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1397:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1379:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1379:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1379:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1303:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1314:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1325:4:27",
                "type": ""
              }
            ],
            "src": "1233:203:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1570:145:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1580:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1592:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1603:2:27",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1588:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1580:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1622:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1637:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1653:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1658:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1649:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1649:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1662:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1645:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1645:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1633:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1633:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1615:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1615:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1615:51:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1686:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1697:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1682:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:18:27"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1702:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1675:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1675:34:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1675:34:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1531:9:27",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1542:6:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1550:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1561:4:27",
                "type": ""
              }
            ],
            "src": "1441:274:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1849:102:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1859:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1871:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1882:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1867:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1867:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1859:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1901:9:27"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1916:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1932:3:27",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1937:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1928:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1928:11:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1941:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1924:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1924:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1912:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1912:32:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1894:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1894:51:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_REUM_ticket_$4666__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1818:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1829:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1840:4:27",
                "type": ""
              }
            ],
            "src": "1720:231:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2130:228:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2147:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2158:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2140:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2140:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2140:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2181:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2192:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2177:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2197:2:27",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2170:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2170:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2220:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2231:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2216:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2216:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2236:34:27",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2209:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2209:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2209:62:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2291:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2302:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2287:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2287:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2307:8:27",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2280:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:36:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2280:36:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2325:27:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2337:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2348:3:27",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2333:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2333:19:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2325:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2107:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2121:4:27",
                "type": ""
              }
            ],
            "src": "1956:402:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2537:168:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2554:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2565:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2547:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2547:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2547:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2588:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2599:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2584:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2584:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2604:2:27",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2577:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2577:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2577:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2627:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2638:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2623:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2643:20:27",
                        "type": "",
                        "value": "Vault: non payable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2616:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2616:48:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2616:48:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2673:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2685:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2681:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2673:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2514:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2528:4:27",
                "type": ""
              }
            ],
            "src": "2363:342:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2884:176:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2901:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2912:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2894:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2894:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2894:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2935:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2946:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2931:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2931:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2951:2:27",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2924:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2924:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2924:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2974:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2985:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2970:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2970:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2990:28:27",
                        "type": "",
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2963:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2963:56:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2963:56:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3028:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3040:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3051:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3036:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3036:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3028:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2861:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2875:4:27",
                "type": ""
              }
            ],
            "src": "2710:350:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3239:182:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3256:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3267:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3249:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3249:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3290:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3301:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3286:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3286:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3306:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3279:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3279:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3279:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3329:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3340:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3325:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3325:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3345:34:27",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3318:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3318:62:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3318:62:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3389:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3401:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3412:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3397:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3397:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3389:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3216:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3230:4:27",
                "type": ""
              }
            ],
            "src": "3065:356:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3600:171:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3617:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3628:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3610:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3610:21:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3610:21:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3651:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3662:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3647:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3647:18:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3667:2:27",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3640:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3640:30:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3640:30:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3690:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3701:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3686:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3686:18:27"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3706:23:27",
                        "type": "",
                        "value": "Vault: Invalid ticker"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3679:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3679:51:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3679:51:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3739:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3751:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3762:2:27",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3747:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3747:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3739:4:27"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3577:9:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3591:4:27",
                "type": ""
              }
            ],
            "src": "3426:345:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3877:76:27",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3887:26:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3899:9:27"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3910:2:27",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3895:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3895:18:27"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3887:4:27"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3929:9:27"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3940:6:27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3922:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3922:25:27"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3922:25:27"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3846:9:27",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3857:6:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3868:4:27",
                "type": ""
              }
            ],
            "src": "3776:177:27"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4004:171:27",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4035:111:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4056:1:27"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4063:3:27",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4068:10:27",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4059:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4059:20:27"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4049:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4049:31:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4049:31:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4100:1:27",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4103:4:27",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4093:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4093:15:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4093:15:27"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4128:1:27"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4131:4:27",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4121:6:27"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4121:15:27"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4121:15:27"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4024:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4017:6:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4017:9:27"
                  },
                  "nodeType": "YulIf",
                  "src": "4014:2:27"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4155:14:27",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4164:1:27"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4167:1:27"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4160:3:27"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4160:9:27"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4155:1:27"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3989:1:27",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3992:1:27",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3998:1:27",
                "type": ""
              }
            ],
            "src": "3958:217:27"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_REUM_ticket_$4666__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Vault: non payable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Vault: unauthorized access\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Vault: Invalid ticker\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 27,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "519:1302:26:-:0;;;585:16;555:46;;675:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:0;-1:-1:-1;;;;;909:18:0;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:0;942:43;;909:6;;942:43;-1:-1:-1;711:13:26;:20;;-1:-1:-1;;;;;;711:20:26;-1:-1:-1;;;;;711:20:26;;;;;759:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;741:15:26;:35;;-1:-1:-1;;;;;;741:35:26;-1:-1:-1;;;;;741:35:26;;;;;;;;;;-1:-1:-1;519:1302:26;;586:96:13;665:10;586:96;:::o;519:1302:26:-;;;;;;;;:::o;14:310:27:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:27;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:27:o;:::-;519:1302:26;;;;;;",
  "deployedSourceMap": "519:1302:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1783:28;;-1:-1:-1;;;1783:28:26;;;;;;;:::i;:::-;;;;;;;;519:1302;;;;1661:78;;;;;;;;;;;;;:::i;:::-;;555:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1517:138;;;;;;;;;;-1:-1:-1;1517:138:26;;;;;:::i;:::-;;:::i;929:582::-;;;;;;;;;;-1:-1:-1;929:582:26;;;;;:::i;:::-;;:::i;1700:145:0:-;;;;;;;;;;;;;:::i;1068:85::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1994:240::-;;;;;;;;;;-1:-1:-1;1994:240:0;;;;;:::i;:::-;;:::i;634:34:26:-;;;;;;;;;;;;;:::i;1661:78::-;1291:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1706:15:26::1;;;;;;;;;-1:-1:-1::0;;;;;1706:15:26::1;-1:-1:-1::0;;;;;1706:24:26::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1661:78::o:0;555:46::-;;;;:::o;1517:138::-;1591:7;1636:12;;1617:16;:31;;;;:::i;:::-;1610:38;;1517:138;;;;:::o;929:582::-;1053:13;;1012:7;;-1:-1:-1;;;;;1053:13:26;1039:10;:27;1031:66;;;;-1:-1:-1;;;1031:66:26;;;;;;;:::i;:::-;-1:-1:-1;;;1111:6:26;:25;1108:396;;;1152:21;1188:12;;1176:9;:24;;;;:::i;:::-;1152:48;;1233:1;1217:13;:17;:48;;;;;1238:15;;;;;;;;;-1:-1:-1;;;;;1238:15:26;-1:-1:-1;;;;;1238:25:26;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1214:100;;;1267:15;;:47;;-1:-1:-1;;;1267:47:26;;-1:-1:-1;;;;;1267:15:26;;;;:26;;:47;;1294:4;;1300:13;;1267:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:100;1411:1;1404:8;;;;;1108:396;1473:31;;-1:-1:-1;;;1473:31:26;;;;;;;:::i;1108:396::-;929:582;;;;;:::o;1700:145:0:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;1068:85::-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;1068:85;:::o;1994:240::-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:0::1;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;634:34:26:-;;;-1:-1:-1;;;;;634:34:26;;:::o;586:96:13:-;665:10;586:96;:::o;14:175:27:-;84:20;;-1:-1:-1;;;;;133:31:27;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:297::-;;517:2;505:9;496:7;492:23;488:32;485:2;;;538:6;530;523:22;485:2;575:9;569:16;628:5;621:13;614:21;607:5;604:32;594:2;;655:6;647;640:22;699:190;;811:2;799:9;790:7;786:23;782:32;779:2;;;832:6;824;817:22;779:2;-1:-1:-1;860:23:27;;769:120;-1:-1:-1;769:120:27:o;894:334::-;;;;1040:2;1028:9;1019:7;1015:23;1011:32;1008:2;;;1061:6;1053;1046:22;1008:2;1102:9;1089:23;1079:33;;1131:40;1167:2;1156:9;1152:18;1131:40;:::i;:::-;1121:50;;1218:2;1207:9;1203:18;1190:32;1180:42;;998:230;;;;;:::o;1233:203::-;-1:-1:-1;;;;;1397:32:27;;;;1379:51;;1367:2;1352:18;;1334:102::o;1441:274::-;-1:-1:-1;;;;;1633:32:27;;;;1615:51;;1697:2;1682:18;;1675:34;1603:2;1588:18;;1570:145::o;1956:402::-;2158:2;2140:21;;;2197:2;2177:18;;;2170:30;2236:34;2231:2;2216:18;;2209:62;-1:-1:-1;;;2302:2:27;2287:18;;2280:36;2348:3;2333:19;;2130:228::o;2363:342::-;2565:2;2547:21;;;2604:2;2584:18;;;2577:30;-1:-1:-1;;;2638:2:27;2623:18;;2616:48;2696:2;2681:18;;2537:168::o;2710:350::-;2912:2;2894:21;;;2951:2;2931:18;;;2924:30;2990:28;2985:2;2970:18;;2963:56;3051:2;3036:18;;2884:176::o;3065:356::-;3267:2;3249:21;;;3286:18;;;3279:30;3345:34;3340:2;3325:18;;3318:62;3412:2;3397:18;;3239:182::o;3426:345::-;3628:2;3610:21;;;3667:2;3647:18;;;3640:30;-1:-1:-1;;;3701:2:27;3686:18;;3679:51;3762:2;3747:18;;3600:171::o;3776:177::-;3922:25;;;3910:2;3895:18;;3877:76::o;3958:217::-;;4024:1;4014:2;;-1:-1:-1;;;4049:31:27;;4103:4;4100:1;4093:15;4131:4;4056:1;4121:15;4014:2;-1:-1:-1;4160:9:27;;4004:171::o",
  "source": "// SPDX-License-Identifier: GPL\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./REUM_ticket.sol\";\n\n/// @title Rewardeum Vault v01\n/// @author DrGorilla_md (Tg/Twtr)\n/// @notice vault: minting lottery tickets to win $rsun NFT\n/// @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n/// on a per-asset basis.\n/// Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT\ncontract Vault_01 is Ownable {\n\n    uint256 public ticket_price = 3000000000000000;\n    address main_contract;\n    REUM_ticket public ticket_contract;\n\n    constructor(address reum) {\n        main_contract = reum;\n        ticket_contract = new REUM_ticket();\n    }\n\n    /// @notice custom claim, only called by the main_contract \n    /// @dev this part is updated as needed then redeployed/proxied by main\n    function claim(uint256 claimable,  address dest, bytes32 ticker) external returns (uint256) {\n        require(msg.sender == main_contract, \"Vault: unauthorized access\");\n\n        if(ticker == bytes32(\"RSUN\")) {\n            uint256 NFT_claimable = claimable / ticket_price;\n            if(NFT_claimable > 0 && ticket_contract.isRunning()) ticket_contract.mintTicket(dest, NFT_claimable);\n            //if no more ticket, still processing the claim $rsun (in main)\n            return 0; //all the claimable amount remains\n        }\n\n        else revert(\"Vault: Invalid ticker\");\n    }\n\n    function pending_tickets(uint256 amount_claimable) external view returns (uint256) {\n        return amount_claimable / ticket_price;\n    }\n\n    function stop() external onlyOwner {\n        ticket_contract.hardStop();\n    }\n\n    receive () external payable {\n        revert(\"Vault: non payable\");\n    }\n\n}",
  "sourcePath": "/Volumes/T7 Touch/solidity/Rewardeum/contracts/Vault_01.sol",
  "ast": {
    "absolutePath": "project:/contracts/Vault_01.sol",
    "exportedSymbols": {
      "Address": [
        2421
      ],
      "Context": [
        2444
      ],
      "ERC165": [
        2671
      ],
      "ERC721": [
        1537
      ],
      "ERC721Enumerable": [
        2040
      ],
      "IERC165": [
        2683
      ],
      "IERC721": [
        1684
      ],
      "IERC721Enumerable": [
        2071
      ],
      "IERC721Metadata": [
        2098
      ],
      "IERC721Receiver": [
        1702
      ],
      "Ownable": [
        109
      ],
      "REUM_ticket": [
        4666
      ],
      "Strings": [
        2647
      ],
      "Vault_01": [
        8671
      ]
    },
    "id": 8672,
    "license": "GPL",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8552,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:26"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8553,
        "nodeType": "ImportDirective",
        "scope": 8672,
        "sourceUnit": 110,
        "src": "56:52:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8554,
        "nodeType": "ImportDirective",
        "scope": 8672,
        "sourceUnit": 1685,
        "src": "109:58:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/REUM_ticket.sol",
        "file": "./REUM_ticket.sol",
        "id": 8555,
        "nodeType": "ImportDirective",
        "scope": 8672,
        "sourceUnit": 4667,
        "src": "168:27:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8557,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 109,
              "src": "540:7:26"
            },
            "id": 8558,
            "nodeType": "InheritanceSpecifier",
            "src": "540:7:26"
          }
        ],
        "contractDependencies": [
          109,
          2444,
          4666
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8556,
          "nodeType": "StructuredDocumentation",
          "src": "197:322:26",
          "text": "@title Rewardeum Vault v01\n @author DrGorilla_md (Tg/Twtr)\n @notice vault: minting lottery tickets to win $rsun NFT\n @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n on a per-asset basis.\n Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT"
        },
        "fullyImplemented": true,
        "id": 8671,
        "linearizedBaseContracts": [
          8671,
          109,
          2444
        ],
        "name": "Vault_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "19d41c69",
            "id": 8561,
            "mutability": "mutable",
            "name": "ticket_price",
            "nodeType": "VariableDeclaration",
            "scope": 8671,
            "src": "555:46:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8559,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "555:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33303030303030303030303030303030",
              "id": 8560,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "585:16:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000000000000_by_1",
                "typeString": "int_const 3000000000000000"
              },
              "value": "3000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8563,
            "mutability": "mutable",
            "name": "main_contract",
            "nodeType": "VariableDeclaration",
            "scope": 8671,
            "src": "607:21:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8562,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f504a9d5",
            "id": 8566,
            "mutability": "mutable",
            "name": "ticket_contract",
            "nodeType": "VariableDeclaration",
            "scope": 8671,
            "src": "634:34:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_REUM_ticket_$4666",
              "typeString": "contract REUM_ticket"
            },
            "typeName": {
              "id": 8565,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8564,
                "name": "REUM_ticket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4666,
                "src": "634:11:26"
              },
              "referencedDeclaration": 4666,
              "src": "634:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                "typeString": "contract REUM_ticket"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8582,
              "nodeType": "Block",
              "src": "701:82:26",
              "statements": [
                {
                  "expression": {
                    "id": 8573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8571,
                      "name": "main_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8563,
                      "src": "711:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8572,
                      "name": "reum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8568,
                      "src": "727:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "711:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8574,
                  "nodeType": "ExpressionStatement",
                  "src": "711:20:26"
                },
                {
                  "expression": {
                    "id": 8580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8575,
                      "name": "ticket_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8566,
                      "src": "741:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 8578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "759:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_REUM_ticket_$4666_$",
                          "typeString": "function () returns (contract REUM_ticket)"
                        },
                        "typeName": {
                          "id": 8577,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 8576,
                            "name": "REUM_ticket",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4666,
                            "src": "763:11:26"
                          },
                          "referencedDeclaration": 4666,
                          "src": "763:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                            "typeString": "contract REUM_ticket"
                          }
                        }
                      },
                      "id": 8579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "759:17:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "src": "741:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                      "typeString": "contract REUM_ticket"
                    }
                  },
                  "id": 8581,
                  "nodeType": "ExpressionStatement",
                  "src": "741:35:26"
                }
              ]
            },
            "id": 8583,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8568,
                  "mutability": "mutable",
                  "name": "reum",
                  "nodeType": "VariableDeclaration",
                  "scope": 8583,
                  "src": "687:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:14:26"
            },
            "returnParameters": {
              "id": 8570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:0:26"
            },
            "scope": 8671,
            "src": "675:108:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8638,
              "nodeType": "Block",
              "src": "1021:490:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8596,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1039:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1039:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8598,
                          "name": "main_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8563,
                          "src": "1053:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1039:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a20756e617574686f72697a656420616363657373",
                        "id": 8600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1068:28:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        },
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        }
                      ],
                      "id": 8595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1031:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:66:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8602,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:66:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 8608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8603,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8590,
                      "src": "1111:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "5253554e",
                          "id": 8606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1129:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          },
                          "value": "RSUN"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          }
                        ],
                        "id": 8605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1121:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 8604,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1121:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1121:15:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1111:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "5661756c743a20496e76616c6964207469636b6572",
                          "id": 8634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1480:23:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          },
                          "value": "Vault: Invalid ticker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          }
                        ],
                        "id": 8633,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "1473:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 8635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1473:31:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 8636,
                    "nodeType": "ExpressionStatement",
                    "src": "1473:31:26"
                  },
                  "id": 8637,
                  "nodeType": "IfStatement",
                  "src": "1108:396:26",
                  "trueBody": {
                    "id": 8632,
                    "nodeType": "Block",
                    "src": "1138:320:26",
                    "statements": [
                      {
                        "assignments": [
                          8610
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8610,
                            "mutability": "mutable",
                            "name": "NFT_claimable",
                            "nodeType": "VariableDeclaration",
                            "scope": 8632,
                            "src": "1152:21:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8609,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1152:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8614,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8611,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8586,
                            "src": "1176:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 8612,
                            "name": "ticket_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8561,
                            "src": "1188:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1176:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1152:48:26"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 8621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 8617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 8615,
                              "name": "NFT_claimable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8610,
                              "src": "1217:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 8616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1233:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1217:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 8618,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8566,
                                "src": "1238:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 8619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isRunning",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4647,
                              "src": "1238:25:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                "typeString": "function () view external returns (bool)"
                              }
                            },
                            "id": 8620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1238:27:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1217:48:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8629,
                        "nodeType": "IfStatement",
                        "src": "1214:100:26",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8625,
                                "name": "dest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8588,
                                "src": "1294:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 8626,
                                "name": "NFT_claimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8610,
                                "src": "1300:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 8622,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8566,
                                "src": "1267:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 8624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mintTicket",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4601,
                              "src": "1267:26:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256) external"
                              }
                            },
                            "id": 8627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1267:47:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8628,
                          "nodeType": "ExpressionStatement",
                          "src": "1267:47:26"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 8630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1411:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 8594,
                        "id": 8631,
                        "nodeType": "Return",
                        "src": "1404:8:26"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8584,
              "nodeType": "StructuredDocumentation",
              "src": "789:135:26",
              "text": "@notice custom claim, only called by the main_contract \n @dev this part is updated as needed then redeployed/proxied by main"
            },
            "functionSelector": "306cbb20",
            "id": 8639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8586,
                  "mutability": "mutable",
                  "name": "claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 8639,
                  "src": "944:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8588,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 8639,
                  "src": "964:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8590,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 8639,
                  "src": "978:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8589,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "943:50:26"
            },
            "returnParameters": {
              "id": 8594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8593,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8639,
                  "src": "1012:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:9:26"
            },
            "scope": 8671,
            "src": "929:582:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8650,
              "nodeType": "Block",
              "src": "1600:55:26",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8646,
                      "name": "amount_claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8641,
                      "src": "1617:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 8647,
                      "name": "ticket_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8561,
                      "src": "1636:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1617:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8645,
                  "id": 8649,
                  "nodeType": "Return",
                  "src": "1610:38:26"
                }
              ]
            },
            "functionSelector": "2f2bcd33",
            "id": 8651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pending_tickets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8641,
                  "mutability": "mutable",
                  "name": "amount_claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 8651,
                  "src": "1542:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1541:26:26"
            },
            "returnParameters": {
              "id": 8645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8644,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8651,
                  "src": "1591:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1590:9:26"
            },
            "scope": 8671,
            "src": "1517:138:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8661,
              "nodeType": "Block",
              "src": "1696:43:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8656,
                        "name": "ticket_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8566,
                        "src": "1706:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                          "typeString": "contract REUM_ticket"
                        }
                      },
                      "id": 8658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hardStop",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4657,
                      "src": "1706:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 8659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1706:26:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8660,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:26:26"
                }
              ]
            },
            "functionSelector": "07da68f5",
            "id": 8662,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8654,
                "modifierName": {
                  "id": 8653,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1686:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1686:9:26"
              }
            ],
            "name": "stop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1674:2:26"
            },
            "returnParameters": {
              "id": 8655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:0:26"
            },
            "scope": 8671,
            "src": "1661:78:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8669,
              "nodeType": "Block",
              "src": "1773:45:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5661756c743a206e6f6e2070617961626c65",
                        "id": 8666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1790:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        },
                        "value": "Vault: non payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        }
                      ],
                      "id": 8665,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1783:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 8667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1783:28:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8668,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:28:26"
                }
              ]
            },
            "id": 8670,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1753:2:26"
            },
            "returnParameters": {
              "id": 8664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:0:26"
            },
            "scope": 8671,
            "src": "1745:73:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8672,
        "src": "519:1302:26"
      }
    ],
    "src": "32:1789:26"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Vault_01.sol",
    "exportedSymbols": {
      "Address": [
        2421
      ],
      "Context": [
        2444
      ],
      "ERC165": [
        2671
      ],
      "ERC721": [
        1537
      ],
      "ERC721Enumerable": [
        2040
      ],
      "IERC165": [
        2683
      ],
      "IERC721": [
        1684
      ],
      "IERC721Enumerable": [
        2071
      ],
      "IERC721Metadata": [
        2098
      ],
      "IERC721Receiver": [
        1702
      ],
      "Ownable": [
        109
      ],
      "REUM_ticket": [
        4666
      ],
      "Strings": [
        2647
      ],
      "Vault_01": [
        8671
      ]
    },
    "id": 8672,
    "license": "GPL",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8552,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:26"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8553,
        "nodeType": "ImportDirective",
        "scope": 8672,
        "sourceUnit": 110,
        "src": "56:52:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8554,
        "nodeType": "ImportDirective",
        "scope": 8672,
        "sourceUnit": 1685,
        "src": "109:58:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/REUM_ticket.sol",
        "file": "./REUM_ticket.sol",
        "id": 8555,
        "nodeType": "ImportDirective",
        "scope": 8672,
        "sourceUnit": 4667,
        "src": "168:27:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8557,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 109,
              "src": "540:7:26"
            },
            "id": 8558,
            "nodeType": "InheritanceSpecifier",
            "src": "540:7:26"
          }
        ],
        "contractDependencies": [
          109,
          2444,
          4666
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8556,
          "nodeType": "StructuredDocumentation",
          "src": "197:322:26",
          "text": "@title Rewardeum Vault v01\n @author DrGorilla_md (Tg/Twtr)\n @notice vault: minting lottery tickets to win $rsun NFT\n @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n on a per-asset basis.\n Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT"
        },
        "fullyImplemented": true,
        "id": 8671,
        "linearizedBaseContracts": [
          8671,
          109,
          2444
        ],
        "name": "Vault_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "19d41c69",
            "id": 8561,
            "mutability": "mutable",
            "name": "ticket_price",
            "nodeType": "VariableDeclaration",
            "scope": 8671,
            "src": "555:46:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8559,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "555:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33303030303030303030303030303030",
              "id": 8560,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "585:16:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000000000000_by_1",
                "typeString": "int_const 3000000000000000"
              },
              "value": "3000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8563,
            "mutability": "mutable",
            "name": "main_contract",
            "nodeType": "VariableDeclaration",
            "scope": 8671,
            "src": "607:21:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8562,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "607:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f504a9d5",
            "id": 8566,
            "mutability": "mutable",
            "name": "ticket_contract",
            "nodeType": "VariableDeclaration",
            "scope": 8671,
            "src": "634:34:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_REUM_ticket_$4666",
              "typeString": "contract REUM_ticket"
            },
            "typeName": {
              "id": 8565,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8564,
                "name": "REUM_ticket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4666,
                "src": "634:11:26"
              },
              "referencedDeclaration": 4666,
              "src": "634:11:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                "typeString": "contract REUM_ticket"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8582,
              "nodeType": "Block",
              "src": "701:82:26",
              "statements": [
                {
                  "expression": {
                    "id": 8573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8571,
                      "name": "main_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8563,
                      "src": "711:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8572,
                      "name": "reum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8568,
                      "src": "727:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "711:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8574,
                  "nodeType": "ExpressionStatement",
                  "src": "711:20:26"
                },
                {
                  "expression": {
                    "id": 8580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8575,
                      "name": "ticket_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8566,
                      "src": "741:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 8578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "759:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_REUM_ticket_$4666_$",
                          "typeString": "function () returns (contract REUM_ticket)"
                        },
                        "typeName": {
                          "id": 8577,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 8576,
                            "name": "REUM_ticket",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4666,
                            "src": "763:11:26"
                          },
                          "referencedDeclaration": 4666,
                          "src": "763:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                            "typeString": "contract REUM_ticket"
                          }
                        }
                      },
                      "id": 8579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "759:17:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "src": "741:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                      "typeString": "contract REUM_ticket"
                    }
                  },
                  "id": 8581,
                  "nodeType": "ExpressionStatement",
                  "src": "741:35:26"
                }
              ]
            },
            "id": 8583,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8568,
                  "mutability": "mutable",
                  "name": "reum",
                  "nodeType": "VariableDeclaration",
                  "scope": 8583,
                  "src": "687:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:14:26"
            },
            "returnParameters": {
              "id": 8570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "701:0:26"
            },
            "scope": 8671,
            "src": "675:108:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8638,
              "nodeType": "Block",
              "src": "1021:490:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8596,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1039:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1039:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8598,
                          "name": "main_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8563,
                          "src": "1053:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1039:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a20756e617574686f72697a656420616363657373",
                        "id": 8600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1068:28:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        },
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        }
                      ],
                      "id": 8595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1031:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:66:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8602,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:66:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 8608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8603,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8590,
                      "src": "1111:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "5253554e",
                          "id": 8606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1129:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          },
                          "value": "RSUN"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          }
                        ],
                        "id": 8605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1121:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 8604,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1121:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1121:15:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1111:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "5661756c743a20496e76616c6964207469636b6572",
                          "id": 8634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1480:23:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          },
                          "value": "Vault: Invalid ticker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          }
                        ],
                        "id": 8633,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "1473:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 8635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1473:31:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 8636,
                    "nodeType": "ExpressionStatement",
                    "src": "1473:31:26"
                  },
                  "id": 8637,
                  "nodeType": "IfStatement",
                  "src": "1108:396:26",
                  "trueBody": {
                    "id": 8632,
                    "nodeType": "Block",
                    "src": "1138:320:26",
                    "statements": [
                      {
                        "assignments": [
                          8610
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8610,
                            "mutability": "mutable",
                            "name": "NFT_claimable",
                            "nodeType": "VariableDeclaration",
                            "scope": 8632,
                            "src": "1152:21:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8609,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1152:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8614,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8611,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8586,
                            "src": "1176:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 8612,
                            "name": "ticket_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8561,
                            "src": "1188:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1176:24:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1152:48:26"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 8621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 8617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 8615,
                              "name": "NFT_claimable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8610,
                              "src": "1217:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 8616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1233:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1217:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 8618,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8566,
                                "src": "1238:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 8619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isRunning",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4647,
                              "src": "1238:25:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                "typeString": "function () view external returns (bool)"
                              }
                            },
                            "id": 8620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1238:27:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1217:48:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8629,
                        "nodeType": "IfStatement",
                        "src": "1214:100:26",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8625,
                                "name": "dest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8588,
                                "src": "1294:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 8626,
                                "name": "NFT_claimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8610,
                                "src": "1300:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 8622,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8566,
                                "src": "1267:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 8624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mintTicket",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4601,
                              "src": "1267:26:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256) external"
                              }
                            },
                            "id": 8627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1267:47:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8628,
                          "nodeType": "ExpressionStatement",
                          "src": "1267:47:26"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 8630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1411:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 8594,
                        "id": 8631,
                        "nodeType": "Return",
                        "src": "1404:8:26"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8584,
              "nodeType": "StructuredDocumentation",
              "src": "789:135:26",
              "text": "@notice custom claim, only called by the main_contract \n @dev this part is updated as needed then redeployed/proxied by main"
            },
            "functionSelector": "306cbb20",
            "id": 8639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8586,
                  "mutability": "mutable",
                  "name": "claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 8639,
                  "src": "944:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8588,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 8639,
                  "src": "964:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8590,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 8639,
                  "src": "978:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8589,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "943:50:26"
            },
            "returnParameters": {
              "id": 8594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8593,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8639,
                  "src": "1012:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:9:26"
            },
            "scope": 8671,
            "src": "929:582:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8650,
              "nodeType": "Block",
              "src": "1600:55:26",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8646,
                      "name": "amount_claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8641,
                      "src": "1617:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 8647,
                      "name": "ticket_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8561,
                      "src": "1636:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1617:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8645,
                  "id": 8649,
                  "nodeType": "Return",
                  "src": "1610:38:26"
                }
              ]
            },
            "functionSelector": "2f2bcd33",
            "id": 8651,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pending_tickets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8641,
                  "mutability": "mutable",
                  "name": "amount_claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 8651,
                  "src": "1542:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1541:26:26"
            },
            "returnParameters": {
              "id": 8645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8644,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8651,
                  "src": "1591:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1590:9:26"
            },
            "scope": 8671,
            "src": "1517:138:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8661,
              "nodeType": "Block",
              "src": "1696:43:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8656,
                        "name": "ticket_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8566,
                        "src": "1706:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_REUM_ticket_$4666",
                          "typeString": "contract REUM_ticket"
                        }
                      },
                      "id": 8658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hardStop",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4657,
                      "src": "1706:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 8659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1706:26:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8660,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:26:26"
                }
              ]
            },
            "functionSelector": "07da68f5",
            "id": 8662,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8654,
                "modifierName": {
                  "id": 8653,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1686:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1686:9:26"
              }
            ],
            "name": "stop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1674:2:26"
            },
            "returnParameters": {
              "id": 8655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:0:26"
            },
            "scope": 8671,
            "src": "1661:78:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8669,
              "nodeType": "Block",
              "src": "1773:45:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5661756c743a206e6f6e2070617961626c65",
                        "id": 8666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1790:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        },
                        "value": "Vault: non payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        }
                      ],
                      "id": 8665,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1783:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 8667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1783:28:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8668,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:28:26"
                }
              ]
            },
            "id": 8670,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1753:2:26"
            },
            "returnParameters": {
              "id": 8664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:0:26"
            },
            "scope": 8671,
            "src": "1745:73:26",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8672,
        "src": "519:1302:26"
      }
    ],
    "src": "32:1789:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "97": {
      "events": {},
      "links": {},
      "address": "0xB35E209658d2833fc955869F100e2596F2612E35",
      "transactionHash": "0x46c936b48a4c4c56dd5ca7a94699731afae1abc0a80ce638b2dac5e3fe394c96"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-24T20:37:11.895Z",
  "devdoc": {
    "author": "DrGorilla_md (Tg/Twtr)",
    "details": "contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms on a per-asset basis. Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT",
    "kind": "dev",
    "methods": {
      "claim(uint256,address,bytes32)": {
        "details": "this part is updated as needed then redeployed/proxied by main"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Rewardeum Vault v01",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim(uint256,address,bytes32)": {
        "notice": "custom claim, only called by the main_contract "
      }
    },
    "notice": "vault: minting lottery tickets to win $rsun NFT",
    "version": 1
  }
}