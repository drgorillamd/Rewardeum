{
  "contractName": "Vault_01",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "reum",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimable",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_claimable",
          "type": "uint256"
        }
      ],
      "name": "pending_tickets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reum\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_claimable\",\"type\":\"uint256\"}],\"name\":\"pending_tickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"DrGorilla_md (Tg/Twtr)\",\"details\":\"contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms on a per-asset basis Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT\",\"kind\":\"dev\",\"methods\":{\"claim(uint256,address,bytes32)\":{\"details\":\"this part is updated as needed then redeployed/proxied by main\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Rewardeum Vault v01\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256,address,bytes32)\":{\"notice\":\"custom claim, only called by the main_contract \"}},\"notice\":\"vault: minting lottery tickets to win $rsun NFT\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Vault_01.sol\":\"Vault_01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba34b5028b6a297467a7364d9af182649dee0611a0f9620ec27ce10647885cad\",\"dweb:/ipfs/QmWhGtHDcAYWA31f3Ze9izeh3SPMRzcFagTUwxExLg3sRc\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/REUM_ticket.sol\":{\"keccak256\":\"0x5fc49aa58bcf7e0dc7e23b31e2d59869c2574f11927ceffed4bc62d55848958e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7af3350dccf6ebb76566362407d6bd60bdb0cbe954c01311d81761d9b77e889c\",\"dweb:/ipfs/QmeaCWZfY5TLnHFZTtXJjqvtLbTG7xHCDYKNEVw8k8hY9K\"]},\"project:/contracts/Vault_01.sol\":{\"keccak256\":\"0x5cdcb8ea9bc33962a2af7a2bb424a077e7922d7b3d2a89baf7c22008bb6bed09\",\"license\":\"GPL\",\"urls\":[\"bzz-raw://049f78bf38597e20a77f33c337a51c97843a3d5ec7a146790f728dc2377c9f48\",\"dweb:/ipfs/QmTFD3oWZJMNrNP4ZzFxaLk7fVuR6jmqQb4fbzrRtdRtRu\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b5060405161263638038061263683398101604081905261003491610103565b600061003e6100f2565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b0319166001600160a01b0383161790556040516100af906100f6565b604051809103906000f0801580156100cb573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b039290921691909117905550610131565b3390565b611f4a806106ec83390190565b600060208284031215610114578081fd5b81516001600160a01b038116811461012a578182fd5b9392505050565b6105ac806101406000396000f3fe60806040526004361061004e5760003560e01c80632f2bcd3314610079578063306cbb20146100af578063715018a6146100dc5780638da5cb5b146100f3578063f2fde38b1461011557610074565b366100745760405162461bcd60e51b815260040161006b90610486565b60405180910390fd5b600080fd5b34801561008557600080fd5b506100996100943660046103bc565b610135565b6040516100a6919061054d565b60405180910390f35b3480156100bb57600080fd5b506100cf6100ca3660046103d4565b61014d565b6040516100a69190610435565b3480156100e857600080fd5b506100f161022f565b005b3480156100ff57600080fd5b506101086102b8565b6040516100a69190610408565b34801561012157600080fd5b506100f16101303660046103a2565b6102c7565b6000600154826101459190610556565b90505b919050565b6002546000906001600160a01b0316331461017a5760405162461bcd60e51b815260040161006b906104b2565b632929aaa760e11b821415610210576000600154856101999190610556565b90508015610206576003546040516352fbfa3360e11b81526001600160a01b039091169063a5f7f466906101d3908790859060040161041c565b600060405180830381600087803b1580156101ed57600080fd5b505af1158015610201573d6000803e3d6000fd5b505050505b6001915050610228565b60405162461bcd60e51b815260040161006b9061051e565b9392505050565b610237610387565b6001600160a01b03166102486102b8565b6001600160a01b03161461026e5760405162461bcd60e51b815260040161006b906104e9565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6102cf610387565b6001600160a01b03166102e06102b8565b6001600160a01b0316146103065760405162461bcd60e51b815260040161006b906104e9565b6001600160a01b03811661032c5760405162461bcd60e51b815260040161006b90610440565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b80356001600160a01b038116811461014857600080fd5b6000602082840312156103b3578081fd5b6102288261038b565b6000602082840312156103cd578081fd5b5035919050565b6000806000606084860312156103e8578182fd5b833592506103f86020850161038b565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152715661756c743a206e6f6e2070617961626c6560701b604082015260600190565b6020808252601a908201527f5661756c743a20756e617574686f72697a656420616363657373000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601590820152742b30bab63a1d1024b73b30b634b2103a34b1b5b2b960591b604082015260600190565b90815260200190565b60008261057157634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220f004601734a4006007101cfee088666092005f5d7aaf6a4a03584f09d1ca0b9764736f6c6343000800003360806040523480156200001157600080fd5b5060408051808201825260078152664c4f545445525960c81b6020808301918252835180850190945260098452682922aaa6bc2929aaa760b91b908401528151919291620000629160009162000116565b5080516200007890600190602084019062000116565b50505060006200008d6200011260201b60201c565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060405180606001604052806032815260200162001f186032913980516200010b91600b9160209091019062000116565b50620001f9565b3390565b8280546200012490620001bc565b90600052602060002090601f01602090048101928262000148576000855562000193565b82601f106200016357805160ff191683800117855562000193565b8280016001018555821562000193579182015b828111156200019357825182559160200191906001019062000176565b50620001a1929150620001a5565b5090565b5b80821115620001a15760008155600101620001a6565b600281046001821680620001d157607f821691505b60208210811415620001f357634e487b7160e01b600052602260045260246000fd5b50919050565b611d0f80620002096000396000f3fe6080604052600436106101445760003560e01c806370a08231116100b6578063b88d4fde1161006f578063b88d4fde1461038c578063c87b56dd146103ac578063e5aca894146103cc578063e8a3d485146103ec578063e985e9c514610401578063f2fde38b146104215761016a565b806370a08231146102ed578063715018a61461030d5780638da5cb5b1461032257806395d89b4114610337578063a22cb4651461034c578063a5f7f4661461036c5761016a565b80631c10b8ca116101085780631c10b8ca1461023857806323b872dd1461024d5780632f745c591461026d57806342842e0e1461028d5780634f6ccce7146102ad5780636352211e146102cd5761016a565b806301ffc9a71461016f57806306fdde03146101a5578063081812fc146101c7578063095ea7b3146101f457806318160ddd146102165761016a565b3661016a5760405162461bcd60e51b815260040161016190611b04565b60405180910390fd5b600080fd5b34801561017b57600080fd5b5061018f61018a36600461153d565b610441565b60405161019c919061166f565b60405180910390f35b3480156101b157600080fd5b506101ba61046e565b60405161019c919061167a565b3480156101d357600080fd5b506101e76101e23660046115bb565b610500565b60405161019c919061161e565b34801561020057600080fd5b5061021461020f366004611514565b610543565b005b34801561022257600080fd5b5061022b6105db565b60405161019c9190611bd8565b34801561024457600080fd5b5061022b6105e1565b34801561025957600080fd5b50610214610268366004611426565b6105e7565b34801561027957600080fd5b5061022b610288366004611514565b61061f565b34801561029957600080fd5b506102146102a8366004611426565b610671565b3480156102b957600080fd5b5061022b6102c83660046115bb565b61068c565b3480156102d957600080fd5b506101e76102e83660046115bb565b6106e7565b3480156102f957600080fd5b5061022b6103083660046113d3565b61071c565b34801561031957600080fd5b50610214610760565b34801561032e57600080fd5b506101e76107e9565b34801561034357600080fd5b506101ba6107f8565b34801561035857600080fd5b506102146103673660046114da565b610807565b34801561037857600080fd5b50610214610387366004611514565b6108d5565b34801561039857600080fd5b506102146103a7366004611461565b610986565b3480156103b857600080fd5b506101ba6103c73660046115bb565b6109c5565b3480156103d857600080fd5b506102146103e7366004611575565b610a0b565b3480156103f857600080fd5b506101ba610a61565b34801561040d57600080fd5b5061018f61041c3660046113f4565b610a70565b34801561042d57600080fd5b5061021461043c3660046113d3565b610a9e565b60006001600160e01b0319821663780e9d6360e01b1480610466575061046682610b5f565b90505b919050565b60606000805461047d90611c10565b80601f01602080910402602001604051908101604052809291908181526020018280546104a990611c10565b80156104f65780601f106104cb576101008083540402835291602001916104f6565b820191906000526020600020905b8154815290600101906020018083116104d957829003601f168201915b5050505050905090565b600061050b82610b9f565b6105275760405162461bcd60e51b8152600401610161906119f9565b506000908152600460205260409020546001600160a01b031690565b600061054e826106e7565b9050806001600160a01b0316836001600160a01b031614156105825760405162461bcd60e51b815260040161016190611ac3565b806001600160a01b0316610594610bbc565b6001600160a01b031614806105b057506105b08161041c610bbc565b6105cc5760405162461bcd60e51b81526004016101619061189d565b6105d68383610bc0565b505050565b60085490565b600d5481565b6105f86105f2610bbc565b82610c2e565b6106145760405162461bcd60e51b815260040161016190611b3b565b6105d6838383610cb3565b600061062a8361071c565b82106106485760405162461bcd60e51b81526004016101619061168d565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6105d683838360405180602001604052806000815250610986565b60006106966105db565b82106106b45760405162461bcd60e51b815260040161016190611b8c565b600882815481106106d557634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104665760405162461bcd60e51b815260040161016190611944565b60006001600160a01b0382166107445760405162461bcd60e51b8152600401610161906118fa565b506001600160a01b031660009081526003602052604090205490565b610768610bbc565b6001600160a01b03166107796107e9565b6001600160a01b03161461079f5760405162461bcd60e51b815260040161016190611a45565b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b600a546001600160a01b031690565b60606001805461047d90611c10565b61080f610bbc565b6001600160a01b0316826001600160a01b031614156108405760405162461bcd60e51b8152600401610161906117eb565b806005600061084d610bbc565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610891610bbc565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516108c9919061166f565b60405180910390a35050565b6108dd610bbc565b6001600160a01b03166108ee6107e9565b6001600160a01b0316146109145760405162461bcd60e51b815260040161016190611a45565b60005b818110156105d657600d5461092a6105db565b610935906001611be1565b11156109535760405162461bcd60e51b81526004016101619061198d565b600c805490600061096383611c4b565b919050555061097483600c54610de0565b8061097e81611c4b565b915050610917565b610997610991610bbc565b83610c2e565b6109b35760405162461bcd60e51b815260040161016190611b3b565b6109bf84848484610ebf565b50505050565b60606109d082610b9f565b6109ec5760405162461bcd60e51b81526004016101619061186e565b6040518060600160405280602e8152602001611cac602e913992915050565b610a13610bbc565b6001600160a01b0316610a246107e9565b6001600160a01b031614610a4a5760405162461bcd60e51b815260040161016190611a45565b8051610a5d90600b9060208401906112b3565b5050565b6060600b805461047d90611c10565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610aa6610bbc565b6001600160a01b0316610ab76107e9565b6001600160a01b031614610add5760405162461bcd60e51b815260040161016190611a45565b6001600160a01b038116610b035760405162461bcd60e51b81526004016101619061172a565b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b1480610b9057506001600160e01b03198216635b5e139f60e01b145b80610466575061046682610ef2565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610bf5826106e7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610c3982610b9f565b610c555760405162461bcd60e51b815260040161016190611822565b6000610c60836106e7565b9050806001600160a01b0316846001600160a01b03161480610c9b5750836001600160a01b0316610c9084610500565b6001600160a01b0316145b80610cab5750610cab8185610a70565b949350505050565b826001600160a01b0316610cc6826106e7565b6001600160a01b031614610cec5760405162461bcd60e51b815260040161016190611a7a565b6001600160a01b038216610d125760405162461bcd60e51b8152600401610161906117a7565b610d1d838383610f0b565b610d28600082610bc0565b6001600160a01b0383166000908152600360205260408120805460019290610d51908490611bf9565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d7f908490611be1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610e065760405162461bcd60e51b8152600401610161906119c4565b610e0f81610b9f565b15610e2c5760405162461bcd60e51b815260040161016190611770565b610e3860008383610f0b565b6001600160a01b0382166000908152600360205260408120805460019290610e61908490611be1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610eca848484610cb3565b610ed684848484610f94565b6109bf5760405162461bcd60e51b8152600401610161906116d8565b6001600160e01b031981166301ffc9a760e01b14919050565b610f168383836105d6565b6001600160a01b038316610f3257610f2d816110af565b610f55565b816001600160a01b0316836001600160a01b031614610f5557610f5583826110f3565b6001600160a01b038216610f7157610f6c81611190565b6105d6565b826001600160a01b0316826001600160a01b0316146105d6576105d68282611269565b6000610fa8846001600160a01b03166112ad565b156110a457836001600160a01b031663150b7a02610fc4610bbc565b8786866040518563ffffffff1660e01b8152600401610fe69493929190611632565b602060405180830381600087803b15801561100057600080fd5b505af1925050508015611030575060408051601f3d908101601f1916820190925261102d91810190611559565b60015b61108a573d80801561105e576040519150601f19603f3d011682016040523d82523d6000602084013e611063565b606091505b5080516110825760405162461bcd60e51b8152600401610161906116d8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610cab565b506001949350505050565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600060016111008461071c565b61110a9190611bf9565b60008381526007602052604090205490915080821461115d576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906111a290600190611bf9565b600083815260096020526040812054600880549394509092849081106111d857634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806008838154811061120757634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061124d57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b60006112748361071c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b3b151590565b8280546112bf90611c10565b90600052602060002090601f0160209004810192826112e15760008555611327565b82601f106112fa57805160ff1916838001178555611327565b82800160010185558215611327579182015b8281111561132757825182559160200191906001019061130c565b50611333929150611337565b5090565b5b808211156113335760008155600101611338565b600067ffffffffffffffff8084111561136757611367611c7c565b604051601f8501601f19168101602001828111828210171561138b5761138b611c7c565b6040528481529150818385018610156113a357600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b038116811461046957600080fd5b6000602082840312156113e4578081fd5b6113ed826113bc565b9392505050565b60008060408385031215611406578081fd5b61140f836113bc565b915061141d602084016113bc565b90509250929050565b60008060006060848603121561143a578081fd5b611443846113bc565b9250611451602085016113bc565b9150604084013590509250925092565b60008060008060808587031215611476578081fd5b61147f856113bc565b935061148d602086016113bc565b925060408501359150606085013567ffffffffffffffff8111156114af578182fd5b8501601f810187136114bf578182fd5b6114ce8782356020840161134c565b91505092959194509250565b600080604083850312156114ec578182fd5b6114f5836113bc565b915060208301358015158114611509578182fd5b809150509250929050565b60008060408385031215611526578182fd5b61152f836113bc565b946020939093013593505050565b60006020828403121561154e578081fd5b81356113ed81611c92565b60006020828403121561156a578081fd5b81516113ed81611c92565b600060208284031215611586578081fd5b813567ffffffffffffffff81111561159c578182fd5b8201601f810184136115ac578182fd5b610cab8482356020840161134c565b6000602082840312156115cc578081fd5b5035919050565b60008151808452815b818110156115f8576020818501810151868301820152016115dc565b818111156116095782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611665908301846115d3565b9695505050505050565b901515815260200190565b6000602082526113ed60208301846115d3565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526015908201527424b73b30b634b2103a34b1b5b2ba10373ab6b132b960591b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b60208082526017908201527f4e6f206d6f7265207469636b65747320746f206d696e74000000000000000000604082015260600190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526019908201527f5245554d204c6f74746572793a206e6f6e2070617961626c6500000000000000604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b90815260200190565b60008219821115611bf457611bf4611c66565b500190565b600082821015611c0b57611c0b611c66565b500390565b600281046001821680611c2457607f821691505b60208210811415611c4557634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611c5f57611c5f611c66565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114611ca857600080fd5b5056fe68747470733a2f2f7777772e72657761726465756d2e636f6d2f696d616765732f6d657461646174612e6a736f6ea264697066735822122063d4596bfbe6581d0cbef3aabb777ad90e1e1cbb27736e639c0e6e9712e8b7a064736f6c6343000800003368747470733a2f2f7777772e72657761726465756d2e636f6d2f696d616765732f636f6e74726163745f7572692e6a736f6e",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80632f2bcd3314610079578063306cbb20146100af578063715018a6146100dc5780638da5cb5b146100f3578063f2fde38b1461011557610074565b366100745760405162461bcd60e51b815260040161006b90610486565b60405180910390fd5b600080fd5b34801561008557600080fd5b506100996100943660046103bc565b610135565b6040516100a6919061054d565b60405180910390f35b3480156100bb57600080fd5b506100cf6100ca3660046103d4565b61014d565b6040516100a69190610435565b3480156100e857600080fd5b506100f161022f565b005b3480156100ff57600080fd5b506101086102b8565b6040516100a69190610408565b34801561012157600080fd5b506100f16101303660046103a2565b6102c7565b6000600154826101459190610556565b90505b919050565b6002546000906001600160a01b0316331461017a5760405162461bcd60e51b815260040161006b906104b2565b632929aaa760e11b821415610210576000600154856101999190610556565b90508015610206576003546040516352fbfa3360e11b81526001600160a01b039091169063a5f7f466906101d3908790859060040161041c565b600060405180830381600087803b1580156101ed57600080fd5b505af1158015610201573d6000803e3d6000fd5b505050505b6001915050610228565b60405162461bcd60e51b815260040161006b9061051e565b9392505050565b610237610387565b6001600160a01b03166102486102b8565b6001600160a01b03161461026e5760405162461bcd60e51b815260040161006b906104e9565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6102cf610387565b6001600160a01b03166102e06102b8565b6001600160a01b0316146103065760405162461bcd60e51b815260040161006b906104e9565b6001600160a01b03811661032c5760405162461bcd60e51b815260040161006b90610440565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b80356001600160a01b038116811461014857600080fd5b6000602082840312156103b3578081fd5b6102288261038b565b6000602082840312156103cd578081fd5b5035919050565b6000806000606084860312156103e8578182fd5b833592506103f86020850161038b565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152715661756c743a206e6f6e2070617961626c6560701b604082015260600190565b6020808252601a908201527f5661756c743a20756e617574686f72697a656420616363657373000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601590820152742b30bab63a1d1024b73b30b634b2103a34b1b5b2b960591b604082015260600190565b90815260200190565b60008261057157634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220f004601734a4006007101cfee088666092005f5d7aaf6a4a03584f09d1ca0b9764736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:16",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:16",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:16"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:16",
                "type": ""
              }
            ],
            "src": "14:310:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3831:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:16",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:16",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:16"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:16"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:16",
                "type": ""
              }
            ],
            "src": "14:175:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:16",
                "type": ""
              }
            ],
            "src": "194:198:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "467:120:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "513:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "522:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "530:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "515:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "515:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "515:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "488:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "497:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "484:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "484:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "480:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "480:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "477:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "548:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "571:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "558:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "558:23:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "548:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "433:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "444:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "456:6:16",
                "type": ""
              }
            ],
            "src": "397:190:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "696:230:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "742:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "751:6:16"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "759:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "744:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "744:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "744:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "717:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "726:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "713:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "713:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "738:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "709:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "709:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "706:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "777:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "800:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "787:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "787:23:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "777:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "819:50:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "854:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "865:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "850:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "850:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "829:20:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "829:40:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "819:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "878:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "905:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "916:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "901:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "901:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "888:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "888:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "878:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "646:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "657:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "669:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "677:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "685:6:16",
                "type": ""
              }
            ],
            "src": "592:334:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1032:102:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1042:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1054:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1065:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1050:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1042:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1084:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1099:6:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1115:3:16",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1120:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1111:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1111:11:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1124:1:16",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1107:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1107:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1077:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1077:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1077:51:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1001:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1012:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1023:4:16",
                "type": ""
              }
            ],
            "src": "931:203:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1268:145:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1278:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1290:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1301:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1286:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1286:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1278:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1320:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1335:6:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1351:3:16",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1356:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1347:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1347:11:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1360:1:16",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1343:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1343:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1331:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1331:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1313:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1313:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1313:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1384:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1395:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1380:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1380:18:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1400:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1373:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1373:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1229:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1240:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1248:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1259:4:16",
                "type": ""
              }
            ],
            "src": "1139:274:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1513:92:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1523:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1535:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1546:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1523:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1565:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1590:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1583:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1583:14:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1576:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1576:22:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1558:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:41:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1558:41:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1482:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1493:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1504:4:16",
                "type": ""
              }
            ],
            "src": "1418:187:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1784:228:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1801:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1812:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1794:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1794:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1794:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1835:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1846:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1831:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1831:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1851:2:16",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1824:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1824:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1824:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1874:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1885:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1870:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1870:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1890:34:16",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1863:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1863:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1863:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1945:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1956:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1961:8:16",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1934:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:36:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1934:36:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1979:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1991:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2002:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1987:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1987:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1979:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1761:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1775:4:16",
                "type": ""
              }
            ],
            "src": "1610:402:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2191:168:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2208:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2219:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2201:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2201:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2201:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2242:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2253:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2238:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2238:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2258:2:16",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2231:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2231:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2231:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2281:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2292:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2277:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2277:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2297:20:16",
                        "type": "",
                        "value": "Vault: non payable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2270:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2270:48:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2270:48:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2327:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2339:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2350:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2335:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2335:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2327:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2168:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2182:4:16",
                "type": ""
              }
            ],
            "src": "2017:342:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2538:176:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2555:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2566:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2548:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2548:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2548:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2589:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2600:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2585:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2585:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2605:2:16",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2578:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2578:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2578:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2628:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2639:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2624:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2624:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2644:28:16",
                        "type": "",
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2617:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2617:56:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2617:56:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2682:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2694:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2705:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2690:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2690:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2682:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2515:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2529:4:16",
                "type": ""
              }
            ],
            "src": "2364:350:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2893:182:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2910:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2921:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2903:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2903:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2903:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2944:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2955:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2940:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2940:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2960:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2933:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2933:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2933:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2983:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2994:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2979:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2979:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2999:34:16",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2972:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2972:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2972:62:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3043:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3055:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3066:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3051:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3051:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3043:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2870:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2884:4:16",
                "type": ""
              }
            ],
            "src": "2719:356:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3254:171:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3271:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3282:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3264:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3264:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3264:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3305:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3316:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3301:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3301:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3321:2:16",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3294:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3294:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3294:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3344:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3355:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3340:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3340:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3360:23:16",
                        "type": "",
                        "value": "Vault: Invalid ticker"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3333:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3333:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3333:51:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3393:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3405:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3416:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3401:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3401:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3393:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3231:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3245:4:16",
                "type": ""
              }
            ],
            "src": "3080:345:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3531:76:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3541:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3553:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3564:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3549:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3549:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3541:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3583:9:16"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3594:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3576:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3576:25:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3576:25:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3500:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3511:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3522:4:16",
                "type": ""
              }
            ],
            "src": "3430:177:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3658:171:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3689:111:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "3710:1:16"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3717:3:16",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3722:10:16",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3713:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3713:20:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3703:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3703:31:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3703:31:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3754:1:16",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3757:4:16",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3747:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3747:15:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3747:15:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "3782:1:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3785:4:16",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3775:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3775:15:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3775:15:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3678:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3671:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3671:9:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3668:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3809:14:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3818:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3821:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3814:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3814:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3809:1:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3643:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3646:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3652:1:16",
                "type": ""
              }
            ],
            "src": "3612:217:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Vault: non payable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Vault: unauthorized access\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Vault: Invalid ticker\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "518:1047:15:-:0;;;577:1;554:24;;645:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:0;-1:-1:-1;;;;;909:18:0;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:0;942:43;;909:6;;942:43;-1:-1:-1;681:13:15;:20;;-1:-1:-1;;;;;;681:20:15;-1:-1:-1;;;;;681:20:15;;;;;729:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;711:15:15;:35;;-1:-1:-1;;;;;;711:35:15;-1:-1:-1;;;;;711:35:15;;;;;;;;;;-1:-1:-1;518:1047:15;;586:96:9;665:10;586:96;:::o;518:1047:15:-;;;;;;;;:::o;14:310:16:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:16;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:16:o;:::-;518:1047:15;;;;;;",
  "deployedSourceMap": "518:1047:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:28;;-1:-1:-1;;;1527:28:15;;;;;;;:::i;:::-;;;;;;;;518:1047;;;;1345:138;;;;;;;;;;-1:-1:-1;1345:138:15;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;899:440;;;;;;;;;;-1:-1:-1;899:440:15;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1700:145:0:-;;;;;;;;;;;;;:::i;:::-;;1068:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1994:240::-;;;;;;;;;;-1:-1:-1;1994:240:0;;;;;:::i;:::-;;:::i;1345:138:15:-;1419:7;1464:12;;1445:16;:31;;;;:::i;:::-;1438:38;;1345:138;;;;:::o;899:440::-;1020:13;;982:4;;-1:-1:-1;;;;;1020:13:15;1006:10;:27;998:66;;;;-1:-1:-1;;;998:66:15;;;;;;;:::i;:::-;-1:-1:-1;;;1078:6:15;:25;1075:257;;;1119:21;1155:12;;1143:9;:24;;;;:::i;:::-;1119:48;-1:-1:-1;1184:17:15;;1181:69;;1203:15;;:47;;-1:-1:-1;;;1203:47:15;;-1:-1:-1;;;;;1203:15:15;;;;:26;;:47;;1230:4;;1236:13;;1203:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1181:69;1271:4;1264:11;;;;;1075:257;1301:31;;-1:-1:-1;;;1301:31:15;;;;;;;:::i;1075:257::-;899:440;;;;;:::o;1700:145:0:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;1068:85::-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;1068:85;:::o;1994:240::-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:0::1;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;586:96:9:-;665:10;586:96;:::o;14:175:16:-;84:20;;-1:-1:-1;;;;;133:31:16;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:190::-;;509:2;497:9;488:7;484:23;480:32;477:2;;;530:6;522;515:22;477:2;-1:-1:-1;558:23:16;;467:120;-1:-1:-1;467:120:16:o;592:334::-;;;;738:2;726:9;717:7;713:23;709:32;706:2;;;759:6;751;744:22;706:2;800:9;787:23;777:33;;829:40;865:2;854:9;850:18;829:40;:::i;:::-;819:50;;916:2;905:9;901:18;888:32;878:42;;696:230;;;;;:::o;931:203::-;-1:-1:-1;;;;;1095:32:16;;;;1077:51;;1065:2;1050:18;;1032:102::o;1139:274::-;-1:-1:-1;;;;;1331:32:16;;;;1313:51;;1395:2;1380:18;;1373:34;1301:2;1286:18;;1268:145::o;1418:187::-;1583:14;;1576:22;1558:41;;1546:2;1531:18;;1513:92::o;1610:402::-;1812:2;1794:21;;;1851:2;1831:18;;;1824:30;1890:34;1885:2;1870:18;;1863:62;-1:-1:-1;;;1956:2:16;1941:18;;1934:36;2002:3;1987:19;;1784:228::o;2017:342::-;2219:2;2201:21;;;2258:2;2238:18;;;2231:30;-1:-1:-1;;;2292:2:16;2277:18;;2270:48;2350:2;2335:18;;2191:168::o;2364:350::-;2566:2;2548:21;;;2605:2;2585:18;;;2578:30;2644:28;2639:2;2624:18;;2617:56;2705:2;2690:18;;2538:176::o;2719:356::-;2921:2;2903:21;;;2940:18;;;2933:30;2999:34;2994:2;2979:18;;2972:62;3066:2;3051:18;;2893:182::o;3080:345::-;3282:2;3264:21;;;3321:2;3301:18;;;3294:30;-1:-1:-1;;;3355:2:16;3340:18;;3333:51;3416:2;3401:18;;3254:171::o;3430:177::-;3576:25;;;3564:2;3549:18;;3531:76::o;3612:217::-;;3678:1;3668:2;;-1:-1:-1;;;3703:31:16;;3757:4;3754:1;3747:15;3785:4;3710:1;3775:15;3668:2;-1:-1:-1;3814:9:16;;3658:171::o",
  "source": "// SPDX-License-Identifier: GPL\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./REUM_ticket.sol\";\n\n/// @title Rewardeum Vault v01\n/// @author DrGorilla_md (Tg/Twtr)\n/// @notice vault: minting lottery tickets to win $rsun NFT\n/// @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n/// on a per-asset basis\n/// Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT\ncontract Vault_01 is Ownable {\n\n    uint256 ticket_price = 0;\n    address main_contract;\n    REUM_ticket ticket_contract;\n\n    constructor(address reum) {\n        main_contract = reum;\n        ticket_contract = new REUM_ticket();\n    }\n\n    /// @notice custom claim, only called by the main_contract \n    /// @dev this part is updated as needed then redeployed/proxied by main\n    function claim(uint256 claimable,  address dest, bytes32 ticker) external returns (bool) {\n        require(msg.sender == main_contract, \"Vault: unauthorized access\");\n\n        if(ticker == bytes32(\"RSUN\")) {\n            uint256 NFT_claimable = claimable / ticket_price;\n            if(NFT_claimable > 0) ticket_contract.mintTicket(dest, NFT_claimable);\n            return true;\n        }\n\n        else revert(\"Vault: Invalid ticker\");\n    }\n\n    function pending_tickets(uint256 amount_claimable) external view returns (uint256) {\n        return amount_claimable / ticket_price;\n    }\n\n    receive () external payable {\n        revert(\"Vault: non payable\");\n    }\n\n}",
  "sourcePath": "/Volumes/T7 Touch/solidity/Rewardeum/contracts/Vault_01.sol",
  "ast": {
    "absolutePath": "project:/contracts/Vault_01.sol",
    "exportedSymbols": {
      "Address": [
        1831
      ],
      "Context": [
        1854
      ],
      "ERC165": [
        2081
      ],
      "ERC721": [
        1005
      ],
      "ERC721Enumerable": [
        1477
      ],
      "IERC165": [
        2093
      ],
      "IERC721": [
        1121
      ],
      "IERC721Enumerable": [
        1508
      ],
      "IERC721Metadata": [
        1535
      ],
      "IERC721Receiver": [
        1139
      ],
      "Ownable": [
        109
      ],
      "REUM_ticket": [
        2283
      ],
      "Strings": [
        2057
      ],
      "Vault_01": [
        2389
      ]
    },
    "id": 2390,
    "license": "GPL",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2285,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2286,
        "nodeType": "ImportDirective",
        "scope": 2390,
        "sourceUnit": 110,
        "src": "56:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2287,
        "nodeType": "ImportDirective",
        "scope": 2390,
        "sourceUnit": 1122,
        "src": "109:58:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/REUM_ticket.sol",
        "file": "./REUM_ticket.sol",
        "id": 2288,
        "nodeType": "ImportDirective",
        "scope": 2390,
        "sourceUnit": 2284,
        "src": "168:27:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2290,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 109,
              "src": "539:7:15"
            },
            "id": 2291,
            "nodeType": "InheritanceSpecifier",
            "src": "539:7:15"
          }
        ],
        "contractDependencies": [
          109,
          1854,
          2283
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2289,
          "nodeType": "StructuredDocumentation",
          "src": "197:321:15",
          "text": "@title Rewardeum Vault v01\n @author DrGorilla_md (Tg/Twtr)\n @notice vault: minting lottery tickets to win $rsun NFT\n @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n on a per-asset basis\n Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT"
        },
        "fullyImplemented": true,
        "id": 2389,
        "linearizedBaseContracts": [
          2389,
          109,
          1854
        ],
        "name": "Vault_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2294,
            "mutability": "mutable",
            "name": "ticket_price",
            "nodeType": "VariableDeclaration",
            "scope": 2389,
            "src": "554:24:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2292,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 2293,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "577:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2296,
            "mutability": "mutable",
            "name": "main_contract",
            "nodeType": "VariableDeclaration",
            "scope": 2389,
            "src": "584:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2295,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "584:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2299,
            "mutability": "mutable",
            "name": "ticket_contract",
            "nodeType": "VariableDeclaration",
            "scope": 2389,
            "src": "611:27:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_REUM_ticket_$2283",
              "typeString": "contract REUM_ticket"
            },
            "typeName": {
              "id": 2298,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2297,
                "name": "REUM_ticket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2283,
                "src": "611:11:15"
              },
              "referencedDeclaration": 2283,
              "src": "611:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                "typeString": "contract REUM_ticket"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2315,
              "nodeType": "Block",
              "src": "671:82:15",
              "statements": [
                {
                  "expression": {
                    "id": 2306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2304,
                      "name": "main_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2296,
                      "src": "681:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2305,
                      "name": "reum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "697:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "681:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2307,
                  "nodeType": "ExpressionStatement",
                  "src": "681:20:15"
                },
                {
                  "expression": {
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2308,
                      "name": "ticket_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2299,
                      "src": "711:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "729:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_REUM_ticket_$2283_$",
                          "typeString": "function () returns (contract REUM_ticket)"
                        },
                        "typeName": {
                          "id": 2310,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2309,
                            "name": "REUM_ticket",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2283,
                            "src": "733:11:15"
                          },
                          "referencedDeclaration": 2283,
                          "src": "733:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                            "typeString": "contract REUM_ticket"
                          }
                        }
                      },
                      "id": 2312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "729:17:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "src": "711:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                      "typeString": "contract REUM_ticket"
                    }
                  },
                  "id": 2314,
                  "nodeType": "ExpressionStatement",
                  "src": "711:35:15"
                }
              ]
            },
            "id": 2316,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2301,
                  "mutability": "mutable",
                  "name": "reum",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "657:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "656:14:15"
            },
            "returnParameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:15"
            },
            "scope": 2389,
            "src": "645:108:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2367,
              "nodeType": "Block",
              "src": "988:351:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2329,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1006:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1006:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2331,
                          "name": "main_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2296,
                          "src": "1020:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1006:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a20756e617574686f72697a656420616363657373",
                        "id": 2333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        },
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        }
                      ],
                      "id": 2328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "998:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "998:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "998:66:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2336,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2323,
                      "src": "1078:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "5253554e",
                          "id": 2339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1096:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          },
                          "value": "RSUN"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          }
                        ],
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1088:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 2337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:7:15",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1088:15:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1078:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "5661756c743a20496e76616c6964207469636b6572",
                          "id": 2363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          },
                          "value": "Vault: Invalid ticker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          }
                        ],
                        "id": 2362,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "1301:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 2364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1301:31:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2365,
                    "nodeType": "ExpressionStatement",
                    "src": "1301:31:15"
                  },
                  "id": 2366,
                  "nodeType": "IfStatement",
                  "src": "1075:257:15",
                  "trueBody": {
                    "id": 2361,
                    "nodeType": "Block",
                    "src": "1105:181:15",
                    "statements": [
                      {
                        "assignments": [
                          2343
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2343,
                            "mutability": "mutable",
                            "name": "NFT_claimable",
                            "nodeType": "VariableDeclaration",
                            "scope": 2361,
                            "src": "1119:21:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2342,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1119:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2347,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2344,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2319,
                            "src": "1143:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2345,
                            "name": "ticket_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2294,
                            "src": "1155:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1143:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1119:48:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2348,
                            "name": "NFT_claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2343,
                            "src": "1184:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1200:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1184:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2358,
                        "nodeType": "IfStatement",
                        "src": "1181:69:15",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2354,
                                "name": "dest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2321,
                                "src": "1230:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2355,
                                "name": "NFT_claimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2343,
                                "src": "1236:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2351,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2299,
                                "src": "1203:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 2353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mintTicket",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2236,
                              "src": "1203:26:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256) external"
                              }
                            },
                            "id": 2356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1203:47:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2357,
                          "nodeType": "ExpressionStatement",
                          "src": "1203:47:15"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1271:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2327,
                        "id": 2360,
                        "nodeType": "Return",
                        "src": "1264:11:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2317,
              "nodeType": "StructuredDocumentation",
              "src": "759:135:15",
              "text": "@notice custom claim, only called by the main_contract \n @dev this part is updated as needed then redeployed/proxied by main"
            },
            "functionSelector": "306cbb20",
            "id": 2368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "914:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "934:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "948:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "913:50:15"
            },
            "returnParameters": {
              "id": 2327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "982:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:6:15"
            },
            "scope": 2389,
            "src": "899:440:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2379,
              "nodeType": "Block",
              "src": "1428:55:15",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2375,
                      "name": "amount_claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2370,
                      "src": "1445:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2376,
                      "name": "ticket_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2294,
                      "src": "1464:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1445:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2374,
                  "id": 2378,
                  "nodeType": "Return",
                  "src": "1438:38:15"
                }
              ]
            },
            "functionSelector": "2f2bcd33",
            "id": 2380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pending_tickets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2370,
                  "mutability": "mutable",
                  "name": "amount_claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "1370:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1369:26:15"
            },
            "returnParameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "1419:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:9:15"
            },
            "scope": 2389,
            "src": "1345:138:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2387,
              "nodeType": "Block",
              "src": "1517:45:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5661756c743a206e6f6e2070617961626c65",
                        "id": 2384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1534:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        },
                        "value": "Vault: non payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        }
                      ],
                      "id": 2383,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1527:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1527:28:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2386,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:28:15"
                }
              ]
            },
            "id": 2388,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:2:15"
            },
            "returnParameters": {
              "id": 2382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1517:0:15"
            },
            "scope": 2389,
            "src": "1489:73:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2390,
        "src": "518:1047:15"
      }
    ],
    "src": "32:1533:15"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Vault_01.sol",
    "exportedSymbols": {
      "Address": [
        1831
      ],
      "Context": [
        1854
      ],
      "ERC165": [
        2081
      ],
      "ERC721": [
        1005
      ],
      "ERC721Enumerable": [
        1477
      ],
      "IERC165": [
        2093
      ],
      "IERC721": [
        1121
      ],
      "IERC721Enumerable": [
        1508
      ],
      "IERC721Metadata": [
        1535
      ],
      "IERC721Receiver": [
        1139
      ],
      "Ownable": [
        109
      ],
      "REUM_ticket": [
        2283
      ],
      "Strings": [
        2057
      ],
      "Vault_01": [
        2389
      ]
    },
    "id": 2390,
    "license": "GPL",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2285,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2286,
        "nodeType": "ImportDirective",
        "scope": 2390,
        "sourceUnit": 110,
        "src": "56:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 2287,
        "nodeType": "ImportDirective",
        "scope": 2390,
        "sourceUnit": 1122,
        "src": "109:58:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/REUM_ticket.sol",
        "file": "./REUM_ticket.sol",
        "id": 2288,
        "nodeType": "ImportDirective",
        "scope": 2390,
        "sourceUnit": 2284,
        "src": "168:27:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2290,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 109,
              "src": "539:7:15"
            },
            "id": 2291,
            "nodeType": "InheritanceSpecifier",
            "src": "539:7:15"
          }
        ],
        "contractDependencies": [
          109,
          1854,
          2283
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2289,
          "nodeType": "StructuredDocumentation",
          "src": "197:321:15",
          "text": "@title Rewardeum Vault v01\n @author DrGorilla_md (Tg/Twtr)\n @notice vault: minting lottery tickets to win $rsun NFT\n @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n on a per-asset basis\n Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT"
        },
        "fullyImplemented": true,
        "id": 2389,
        "linearizedBaseContracts": [
          2389,
          109,
          1854
        ],
        "name": "Vault_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2294,
            "mutability": "mutable",
            "name": "ticket_price",
            "nodeType": "VariableDeclaration",
            "scope": 2389,
            "src": "554:24:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2292,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 2293,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "577:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2296,
            "mutability": "mutable",
            "name": "main_contract",
            "nodeType": "VariableDeclaration",
            "scope": 2389,
            "src": "584:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2295,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "584:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2299,
            "mutability": "mutable",
            "name": "ticket_contract",
            "nodeType": "VariableDeclaration",
            "scope": 2389,
            "src": "611:27:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_REUM_ticket_$2283",
              "typeString": "contract REUM_ticket"
            },
            "typeName": {
              "id": 2298,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2297,
                "name": "REUM_ticket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2283,
                "src": "611:11:15"
              },
              "referencedDeclaration": 2283,
              "src": "611:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                "typeString": "contract REUM_ticket"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2315,
              "nodeType": "Block",
              "src": "671:82:15",
              "statements": [
                {
                  "expression": {
                    "id": 2306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2304,
                      "name": "main_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2296,
                      "src": "681:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2305,
                      "name": "reum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "697:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "681:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2307,
                  "nodeType": "ExpressionStatement",
                  "src": "681:20:15"
                },
                {
                  "expression": {
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2308,
                      "name": "ticket_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2299,
                      "src": "711:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "729:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_REUM_ticket_$2283_$",
                          "typeString": "function () returns (contract REUM_ticket)"
                        },
                        "typeName": {
                          "id": 2310,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2309,
                            "name": "REUM_ticket",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2283,
                            "src": "733:11:15"
                          },
                          "referencedDeclaration": 2283,
                          "src": "733:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                            "typeString": "contract REUM_ticket"
                          }
                        }
                      },
                      "id": 2312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "729:17:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "src": "711:35:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                      "typeString": "contract REUM_ticket"
                    }
                  },
                  "id": 2314,
                  "nodeType": "ExpressionStatement",
                  "src": "711:35:15"
                }
              ]
            },
            "id": 2316,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2301,
                  "mutability": "mutable",
                  "name": "reum",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "657:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "656:14:15"
            },
            "returnParameters": {
              "id": 2303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:15"
            },
            "scope": 2389,
            "src": "645:108:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2367,
              "nodeType": "Block",
              "src": "988:351:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2329,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1006:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1006:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2331,
                          "name": "main_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2296,
                          "src": "1020:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1006:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a20756e617574686f72697a656420616363657373",
                        "id": 2333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        },
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        }
                      ],
                      "id": 2328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "998:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "998:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "998:66:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2336,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2323,
                      "src": "1078:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "5253554e",
                          "id": 2339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1096:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          },
                          "value": "RSUN"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          }
                        ],
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1088:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 2337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:7:15",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1088:15:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1078:25:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "5661756c743a20496e76616c6964207469636b6572",
                          "id": 2363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          },
                          "value": "Vault: Invalid ticker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          }
                        ],
                        "id": 2362,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "1301:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 2364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1301:31:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2365,
                    "nodeType": "ExpressionStatement",
                    "src": "1301:31:15"
                  },
                  "id": 2366,
                  "nodeType": "IfStatement",
                  "src": "1075:257:15",
                  "trueBody": {
                    "id": 2361,
                    "nodeType": "Block",
                    "src": "1105:181:15",
                    "statements": [
                      {
                        "assignments": [
                          2343
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2343,
                            "mutability": "mutable",
                            "name": "NFT_claimable",
                            "nodeType": "VariableDeclaration",
                            "scope": 2361,
                            "src": "1119:21:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2342,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1119:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2347,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2344,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2319,
                            "src": "1143:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2345,
                            "name": "ticket_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2294,
                            "src": "1155:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1143:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1119:48:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2348,
                            "name": "NFT_claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2343,
                            "src": "1184:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1200:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1184:17:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2358,
                        "nodeType": "IfStatement",
                        "src": "1181:69:15",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2354,
                                "name": "dest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2321,
                                "src": "1230:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2355,
                                "name": "NFT_claimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2343,
                                "src": "1236:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2351,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2299,
                                "src": "1203:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$2283",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 2353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mintTicket",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2236,
                              "src": "1203:26:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256) external"
                              }
                            },
                            "id": 2356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1203:47:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2357,
                          "nodeType": "ExpressionStatement",
                          "src": "1203:47:15"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1271:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2327,
                        "id": 2360,
                        "nodeType": "Return",
                        "src": "1264:11:15"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2317,
              "nodeType": "StructuredDocumentation",
              "src": "759:135:15",
              "text": "@notice custom claim, only called by the main_contract \n @dev this part is updated as needed then redeployed/proxied by main"
            },
            "functionSelector": "306cbb20",
            "id": 2368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "914:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2321,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "934:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "948:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "913:50:15"
            },
            "returnParameters": {
              "id": 2327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2368,
                  "src": "982:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:6:15"
            },
            "scope": 2389,
            "src": "899:440:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2379,
              "nodeType": "Block",
              "src": "1428:55:15",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2375,
                      "name": "amount_claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2370,
                      "src": "1445:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2376,
                      "name": "ticket_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2294,
                      "src": "1464:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1445:31:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2374,
                  "id": 2378,
                  "nodeType": "Return",
                  "src": "1438:38:15"
                }
              ]
            },
            "functionSelector": "2f2bcd33",
            "id": 2380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pending_tickets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2370,
                  "mutability": "mutable",
                  "name": "amount_claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "1370:24:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1369:26:15"
            },
            "returnParameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2380,
                  "src": "1419:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:9:15"
            },
            "scope": 2389,
            "src": "1345:138:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2387,
              "nodeType": "Block",
              "src": "1517:45:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5661756c743a206e6f6e2070617961626c65",
                        "id": 2384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1534:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        },
                        "value": "Vault: non payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        }
                      ],
                      "id": 2383,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1527:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1527:28:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2386,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:28:15"
                }
              ]
            },
            "id": 2388,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:2:15"
            },
            "returnParameters": {
              "id": 2382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1517:0:15"
            },
            "scope": 2389,
            "src": "1489:73:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2390,
        "src": "518:1047:15"
      }
    ],
    "src": "32:1533:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-20T11:11:47.465Z",
  "devdoc": {
    "author": "DrGorilla_md (Tg/Twtr)",
    "details": "contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms on a per-asset basis Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT",
    "kind": "dev",
    "methods": {
      "claim(uint256,address,bytes32)": {
        "details": "this part is updated as needed then redeployed/proxied by main"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Rewardeum Vault v01",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim(uint256,address,bytes32)": {
        "notice": "custom claim, only called by the main_contract "
      }
    },
    "notice": "vault: minting lottery tickets to win $rsun NFT",
    "version": 1
  }
}