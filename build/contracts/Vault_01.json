{
  "contractName": "Vault_01",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "reum",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticket_contract",
      "outputs": [
        {
          "internalType": "contract REUM_ticket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "ticket_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimable",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_claimable",
          "type": "uint256"
        }
      ],
      "name": "pending_tickets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reum\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_claimable\",\"type\":\"uint256\"}],\"name\":\"pending_tickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticket_contract\",\"outputs\":[{\"internalType\":\"contract REUM_ticket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticket_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"DrGorilla_md (Tg/Twtr)\",\"details\":\"contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms on a per-asset basis. Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT\",\"kind\":\"dev\",\"methods\":{\"claim(uint256,address,bytes32)\":{\"details\":\"this part is updated as needed then redeployed/proxied by main\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Rewardeum Vault v01\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256,address,bytes32)\":{\"notice\":\"custom claim, only called by the main_contract \"}},\"notice\":\"vault: minting lottery tickets to win $rsun NFT\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Vault_01.sol\":\"Vault_01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba34b5028b6a297467a7364d9af182649dee0611a0f9620ec27ce10647885cad\",\"dweb:/ipfs/QmWhGtHDcAYWA31f3Ze9izeh3SPMRzcFagTUwxExLg3sRc\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/REUM_ticket.sol\":{\"keccak256\":\"0xbe4ddaaa86cf073ac0cd586c5e0ec882d1054acb45cdad275bd493caa3ae656b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c6409e46550abdf4b4b5fe3bcd0529850a4e1fe27040c3ba1bbc49777f68f10\",\"dweb:/ipfs/QmdYZKS5ResgNfi6ovEget9RFPscxeEZbex6Y12TzcZLuu\"]},\"project:/contracts/Vault_01.sol\":{\"keccak256\":\"0x012cbb0db730ddcfdddd4630df3d36b47ede183d24b66e1ab86521e773fd9aa2\",\"license\":\"GPL\",\"urls\":[\"bzz-raw://6c3ceb58eba0c947bf7a82d5ecaba768a84005320a13a470d1bbe83f638d2de2\",\"dweb:/ipfs/QmYuN5xP1eYaJeY9LQwq9z81eP5RcquRR8D8Mtq78wojCR\"]}},\"version\":1}",
  "bytecode": "0x60806040526702c68af0bb14000060015534801561001c57600080fd5b506040516128f93803806128f983398101604081905261003b9161010a565b60006100456100f9565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b0319166001600160a01b0383161790556040516100b6906100fd565b604051809103906000f0801580156100d2573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b039290921691909117905550610138565b3390565b612040806108b983390190565b60006020828403121561011b578081fd5b81516001600160a01b0381168114610131578182fd5b9392505050565b610772806101476000396000f3fe60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a61461012c5780638da5cb5b14610141578063f2fde38b14610163578063f504a9d514610183576100a5565b806307da68f5146100aa57806319d41c69146100c15780632f2bcd33146100ec578063306cbb201461010c576100a5565b366100a55760405162461bcd60e51b815260040161009c9061064c565b60405180910390fd5b600080fd5b3480156100b657600080fd5b506100bf610198565b005b3480156100cd57600080fd5b506100d6610241565b6040516100e39190610713565b60405180910390f35b3480156100f857600080fd5b506100d661010736600461058d565b610247565b34801561011857600080fd5b506100d66101273660046105a5565b61025f565b34801561013857600080fd5b506100bf6103d1565b34801561014d57600080fd5b5061015661045a565b6040516100e391906105d9565b34801561016f57600080fd5b506100bf61017e366004610553565b610469565b34801561018f57600080fd5b50610156610529565b6101a0610538565b6001600160a01b03166101b161045a565b6001600160a01b0316146101d75760405162461bcd60e51b815260040161009c906106af565b600360009054906101000a90046001600160a01b03166001600160a01b0316638382ce306040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b50505050565b60015481565b600060015482610257919061071c565b90505b919050565b6002546000906001600160a01b0316331461028c5760405162461bcd60e51b815260040161009c90610678565b632929aaa760e11b8214156103b2576000600154856102ab919061071c565b905060008111801561033e5750600360009054906101000a90046001600160a01b03166001600160a01b0316632014e5d16040518163ffffffff1660e01b815260040160206040518083038186803b15801561030657600080fd5b505afa15801561031a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e919061056d565b156103a8576003546040516352fbfa3360e11b81526001600160a01b039091169063a5f7f4669061037590879085906004016105ed565b600060405180830381600087803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b505050505b60009150506103ca565b60405162461bcd60e51b815260040161009c906106e4565b9392505050565b6103d9610538565b6001600160a01b03166103ea61045a565b6001600160a01b0316146104105760405162461bcd60e51b815260040161009c906106af565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610471610538565b6001600160a01b031661048261045a565b6001600160a01b0316146104a85760405162461bcd60e51b815260040161009c906106af565b6001600160a01b0381166104ce5760405162461bcd60e51b815260040161009c90610606565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b3390565b80356001600160a01b038116811461025a57600080fd5b600060208284031215610564578081fd5b6103ca8261053c565b60006020828403121561057e578081fd5b815180151581146103ca578182fd5b60006020828403121561059e578081fd5b5035919050565b6000806000606084860312156105b9578182fd5b833592506105c96020850161053c565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152715661756c743a206e6f6e2070617961626c6560701b604082015260600190565b6020808252601a908201527f5661756c743a20756e617574686f72697a656420616363657373000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601590820152742b30bab63a1d1024b73b30b634b2103a34b1b5b2b960591b604082015260600190565b90815260200190565b60008261073757634e487b7160e01b81526012600452602481fd5b50049056fea26469706673582212209317c52f8d01e53bb39fba2b56d1caa6f6e0a923d0b5eba447f27c02099e776864736f6c63430008000033608060405260c8600d553480156200001657600080fd5b5060408051808201825260078152664c4f545445525960c81b6020808301918252835180850190945260098452682922aaa6bc2929aaa760b91b908401528151919291620000679160009162000128565b5080516200007d90600190602084019062000128565b5050506000620000926200012460201b60201c565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506040518060600160405280603281526020016200200e6032913980516200011091600b9160209091019062000128565b50600e805460ff191660011790556200020b565b3390565b8280546200013690620001ce565b90600052602060002090601f0160209004810192826200015a5760008555620001a5565b82601f106200017557805160ff1916838001178555620001a5565b82800160010185558215620001a5579182015b82811115620001a557825182559160200191906001019062000188565b50620001b3929150620001b7565b5090565b5b80821115620001b35760008155600101620001b8565b600281046001821680620001e357607f821691505b602082108114156200020557634e487b7160e01b600052602260045260246000fd5b50919050565b611df3806200021b6000396000f3fe60806040526004361061016a5760003560e01c806370a08231116100d1578063a5f7f4661161008a578063e5aca89411610064578063e5aca8941461041c578063e8a3d4851461043c578063e985e9c514610451578063f2fde38b1461047157610190565b8063a5f7f466146103bc578063b88d4fde146103dc578063c87b56dd146103fc57610190565b806370a0823114610328578063715018a6146103485780638382ce301461035d5780638da5cb5b1461037257806395d89b4114610387578063a22cb4651461039c57610190565b80632014e5d1116101235780632014e5d11461027357806323b872dd146102885780632f745c59146102a857806342842e0e146102c85780634f6ccce7146102e85780636352211e1461030857610190565b806301ffc9a71461019557806306fdde03146101cb578063081812fc146101ed578063095ea7b31461021a57806318160ddd1461023c5780631c10b8ca1461025e57610190565b366101905760405162461bcd60e51b815260040161018790611be8565b60405180910390fd5b600080fd5b3480156101a157600080fd5b506101b56101b0366004611621565b610491565b6040516101c29190611753565b60405180910390f35b3480156101d757600080fd5b506101e06104be565b6040516101c2919061175e565b3480156101f957600080fd5b5061020d61020836600461169f565b610550565b6040516101c29190611702565b34801561022657600080fd5b5061023a6102353660046115f8565b610593565b005b34801561024857600080fd5b5061025161062b565b6040516101c29190611cbc565b34801561026a57600080fd5b50610251610631565b34801561027f57600080fd5b506101b5610637565b34801561029457600080fd5b5061023a6102a336600461150a565b610640565b3480156102b457600080fd5b506102516102c33660046115f8565b610678565b3480156102d457600080fd5b5061023a6102e336600461150a565b6106ca565b3480156102f457600080fd5b5061025161030336600461169f565b6106e5565b34801561031457600080fd5b5061020d61032336600461169f565b610740565b34801561033457600080fd5b506102516103433660046114b7565b610775565b34801561035457600080fd5b5061023a6107b9565b34801561036957600080fd5b5061023a610842565b34801561037e57600080fd5b5061020d61088d565b34801561039357600080fd5b506101e061089c565b3480156103a857600080fd5b5061023a6103b73660046115be565b6108ab565b3480156103c857600080fd5b5061023a6103d73660046115f8565b610979565b3480156103e857600080fd5b5061023a6103f7366004611545565b610a6a565b34801561040857600080fd5b506101e061041736600461169f565b610aa9565b34801561042857600080fd5b5061023a610437366004611659565b610aef565b34801561044857600080fd5b506101e0610b45565b34801561045d57600080fd5b506101b561046c3660046114d8565b610b54565b34801561047d57600080fd5b5061023a61048c3660046114b7565b610b82565b60006001600160e01b0319821663780e9d6360e01b14806104b657506104b682610c43565b90505b919050565b6060600080546104cd90611cf4565b80601f01602080910402602001604051908101604052809291908181526020018280546104f990611cf4565b80156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b5050505050905090565b600061055b82610c83565b6105775760405162461bcd60e51b815260040161018790611add565b506000908152600460205260409020546001600160a01b031690565b600061059e82610740565b9050806001600160a01b0316836001600160a01b031614156105d25760405162461bcd60e51b815260040161018790611ba7565b806001600160a01b03166105e4610ca0565b6001600160a01b0316148061060057506106008161046c610ca0565b61061c5760405162461bcd60e51b8152600401610187906119b8565b6106268383610ca4565b505050565b60085490565b600d5481565b600e5460ff1690565b61065161064b610ca0565b82610d12565b61066d5760405162461bcd60e51b815260040161018790611c1f565b610626838383610d97565b600061068383610775565b82106106a15760405162461bcd60e51b815260040161018790611771565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61062683838360405180602001604052806000815250610a6a565b60006106ef61062b565b821061070d5760405162461bcd60e51b815260040161018790611c70565b6008828154811061072e57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104b65760405162461bcd60e51b815260040161018790611a5f565b60006001600160a01b03821661079d5760405162461bcd60e51b815260040161018790611a15565b506001600160a01b031660009081526003602052604090205490565b6107c1610ca0565b6001600160a01b03166107d261088d565b6001600160a01b0316146107f85760405162461bcd60e51b815260040161018790611b29565b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b61084a610ca0565b6001600160a01b031661085b61088d565b6001600160a01b0316146108815760405162461bcd60e51b815260040161018790611b29565b600e805460ff19169055565b600a546001600160a01b031690565b6060600180546104cd90611cf4565b6108b3610ca0565b6001600160a01b0316826001600160a01b031614156108e45760405162461bcd60e51b8152600401610187906118cf565b80600560006108f1610ca0565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610935610ca0565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161096d9190611753565b60405180910390a35050565b610981610ca0565b6001600160a01b031661099261088d565b6001600160a01b0316146109b85760405162461bcd60e51b815260040161018790611b29565b600c546361392450421015806109cf5750600d5481115b156109df57600e805460ff191690555b600e5460ff16610a015760405162461bcd60e51b815260040161018790611906565b600d54600090610a118484611cc5565b1015610a1d5782610a2b565b81600d54610a2b9190611cdd565b905060005b81811015610a615782610a4281611d2f565b935050610a4f8584610ec4565b80610a5981611d2f565b915050610a30565b5050600c555050565b610a7b610a75610ca0565b83610d12565b610a975760405162461bcd60e51b815260040161018790611c1f565b610aa384848484610fa3565b50505050565b6060610ab482610c83565b610ad05760405162461bcd60e51b815260040161018790611989565b6040518060600160405280602e8152602001611d90602e913992915050565b610af7610ca0565b6001600160a01b0316610b0861088d565b6001600160a01b031614610b2e5760405162461bcd60e51b815260040161018790611b29565b8051610b4190600b906020840190611397565b5050565b6060600b80546104cd90611cf4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610b8a610ca0565b6001600160a01b0316610b9b61088d565b6001600160a01b031614610bc15760405162461bcd60e51b815260040161018790611b29565b6001600160a01b038116610be75760405162461bcd60e51b81526004016101879061180e565b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b1480610c7457506001600160e01b03198216635b5e139f60e01b145b806104b657506104b682610fd6565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cd982610740565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d1d82610c83565b610d395760405162461bcd60e51b81526004016101879061193d565b6000610d4483610740565b9050806001600160a01b0316846001600160a01b03161480610d7f5750836001600160a01b0316610d7484610550565b6001600160a01b0316145b80610d8f5750610d8f8185610b54565b949350505050565b826001600160a01b0316610daa82610740565b6001600160a01b031614610dd05760405162461bcd60e51b815260040161018790611b5e565b6001600160a01b038216610df65760405162461bcd60e51b81526004016101879061188b565b610e01838383610fef565b610e0c600082610ca4565b6001600160a01b0383166000908152600360205260408120805460019290610e35908490611cdd565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e63908490611cc5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610eea5760405162461bcd60e51b815260040161018790611aa8565b610ef381610c83565b15610f105760405162461bcd60e51b815260040161018790611854565b610f1c60008383610fef565b6001600160a01b0382166000908152600360205260408120805460019290610f45908490611cc5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610fae848484610d97565b610fba84848484611078565b610aa35760405162461bcd60e51b8152600401610187906117bc565b6001600160e01b031981166301ffc9a760e01b14919050565b610ffa838383610626565b6001600160a01b0383166110165761101181611193565b611039565b816001600160a01b0316836001600160a01b0316146110395761103983826111d7565b6001600160a01b0382166110555761105081611274565b610626565b826001600160a01b0316826001600160a01b03161461062657610626828261134d565b600061108c846001600160a01b0316611391565b1561118857836001600160a01b031663150b7a026110a8610ca0565b8786866040518563ffffffff1660e01b81526004016110ca9493929190611716565b602060405180830381600087803b1580156110e457600080fd5b505af1925050508015611114575060408051601f3d908101601f191682019092526111119181019061163d565b60015b61116e573d808015611142576040519150601f19603f3d011682016040523d82523d6000602084013e611147565b606091505b5080516111665760405162461bcd60e51b8152600401610187906117bc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d8f565b506001949350505050565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600060016111e484610775565b6111ee9190611cdd565b600083815260076020526040902054909150808214611241576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061128690600190611cdd565b600083815260096020526040812054600880549394509092849081106112bc57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600883815481106112eb57634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061133157634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600061135883610775565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b3b151590565b8280546113a390611cf4565b90600052602060002090601f0160209004810192826113c5576000855561140b565b82601f106113de57805160ff191683800117855561140b565b8280016001018555821561140b579182015b8281111561140b5782518255916020019190600101906113f0565b5061141792915061141b565b5090565b5b80821115611417576000815560010161141c565b600067ffffffffffffffff8084111561144b5761144b611d60565b604051601f8501601f19168101602001828111828210171561146f5761146f611d60565b60405284815291508183850186101561148757600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b03811681146104b957600080fd5b6000602082840312156114c8578081fd5b6114d1826114a0565b9392505050565b600080604083850312156114ea578081fd5b6114f3836114a0565b9150611501602084016114a0565b90509250929050565b60008060006060848603121561151e578081fd5b611527846114a0565b9250611535602085016114a0565b9150604084013590509250925092565b6000806000806080858703121561155a578081fd5b611563856114a0565b9350611571602086016114a0565b925060408501359150606085013567ffffffffffffffff811115611593578182fd5b8501601f810187136115a3578182fd5b6115b287823560208401611430565b91505092959194509250565b600080604083850312156115d0578182fd5b6115d9836114a0565b9150602083013580151581146115ed578182fd5b809150509250929050565b6000806040838503121561160a578182fd5b611613836114a0565b946020939093013593505050565b600060208284031215611632578081fd5b81356114d181611d76565b60006020828403121561164e578081fd5b81516114d181611d76565b60006020828403121561166a578081fd5b813567ffffffffffffffff811115611680578182fd5b8201601f81018413611690578182fd5b610d8f84823560208401611430565b6000602082840312156116b0578081fd5b5035919050565b60008151808452815b818110156116dc576020818501810151868301820152016116c0565b818111156116ed5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611749908301846116b7565b9695505050505050565b901515815260200190565b6000602082526114d160208301846116b7565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252601a908201527f4d696e74696e67206e6f742061637469766520616e796d6f7265000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526015908201527424b73b30b634b2103a34b1b5b2ba10373ab6b132b960591b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526019908201527f5245554d204c6f74746572793a206e6f6e2070617961626c6500000000000000604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b90815260200190565b60008219821115611cd857611cd8611d4a565b500190565b600082821015611cef57611cef611d4a565b500390565b600281046001821680611d0857607f821691505b60208210811415611d2957634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611d4357611d43611d4a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114611d8c57600080fd5b5056fe68747470733a2f2f7777772e72657761726465756d2e636f6d2f696d616765732f6d657461646174612e6a736f6ea2646970667358221220e112a4147d2b035eab7701972858b5e8d0bd697dd0e4f05226bdad0ee479733864736f6c6343000800003368747470733a2f2f7777772e72657761726465756d2e636f6d2f696d616765732f636f6e74726163745f7572692e6a736f6e",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a61461012c5780638da5cb5b14610141578063f2fde38b14610163578063f504a9d514610183576100a5565b806307da68f5146100aa57806319d41c69146100c15780632f2bcd33146100ec578063306cbb201461010c576100a5565b366100a55760405162461bcd60e51b815260040161009c9061064c565b60405180910390fd5b600080fd5b3480156100b657600080fd5b506100bf610198565b005b3480156100cd57600080fd5b506100d6610241565b6040516100e39190610713565b60405180910390f35b3480156100f857600080fd5b506100d661010736600461058d565b610247565b34801561011857600080fd5b506100d66101273660046105a5565b61025f565b34801561013857600080fd5b506100bf6103d1565b34801561014d57600080fd5b5061015661045a565b6040516100e391906105d9565b34801561016f57600080fd5b506100bf61017e366004610553565b610469565b34801561018f57600080fd5b50610156610529565b6101a0610538565b6001600160a01b03166101b161045a565b6001600160a01b0316146101d75760405162461bcd60e51b815260040161009c906106af565b600360009054906101000a90046001600160a01b03166001600160a01b0316638382ce306040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b50505050565b60015481565b600060015482610257919061071c565b90505b919050565b6002546000906001600160a01b0316331461028c5760405162461bcd60e51b815260040161009c90610678565b632929aaa760e11b8214156103b2576000600154856102ab919061071c565b905060008111801561033e5750600360009054906101000a90046001600160a01b03166001600160a01b0316632014e5d16040518163ffffffff1660e01b815260040160206040518083038186803b15801561030657600080fd5b505afa15801561031a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e919061056d565b156103a8576003546040516352fbfa3360e11b81526001600160a01b039091169063a5f7f4669061037590879085906004016105ed565b600060405180830381600087803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b505050505b60009150506103ca565b60405162461bcd60e51b815260040161009c906106e4565b9392505050565b6103d9610538565b6001600160a01b03166103ea61045a565b6001600160a01b0316146104105760405162461bcd60e51b815260040161009c906106af565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b610471610538565b6001600160a01b031661048261045a565b6001600160a01b0316146104a85760405162461bcd60e51b815260040161009c906106af565b6001600160a01b0381166104ce5760405162461bcd60e51b815260040161009c90610606565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b3390565b80356001600160a01b038116811461025a57600080fd5b600060208284031215610564578081fd5b6103ca8261053c565b60006020828403121561057e578081fd5b815180151581146103ca578182fd5b60006020828403121561059e578081fd5b5035919050565b6000806000606084860312156105b9578182fd5b833592506105c96020850161053c565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152715661756c743a206e6f6e2070617961626c6560701b604082015260600190565b6020808252601a908201527f5661756c743a20756e617574686f72697a656420616363657373000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601590820152742b30bab63a1d1024b73b30b634b2103a34b1b5b2b960591b604082015260600190565b90815260200190565b60008261073757634e487b7160e01b81526012600452602481fd5b50049056fea26469706673582212209317c52f8d01e53bb39fba2b56d1caa6f6e0a923d0b5eba447f27c02099e776864736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:35",
                "type": ""
              }
            ],
            "src": "14:310:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4177:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:35"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:35",
                "type": ""
              }
            ],
            "src": "14:175:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:35",
                "type": ""
              }
            ],
            "src": "194:198:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:219:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "521:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "530:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "538:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "523:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "523:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "523:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "496:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "505:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "492:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "492:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "488:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "485:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "556:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "575:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "569:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "569:16:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "560:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "647:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "655:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "640:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "640:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "607:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "628:5:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "621:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "621:13:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "614:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "614:21:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "604:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "597:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:40:35"
                  },
                  "nodeType": "YulIf",
                  "src": "594:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "673:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "683:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "673:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "441:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "452:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "464:6:35",
                "type": ""
              }
            ],
            "src": "397:297:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "769:120:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "824:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "832:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "817:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "790:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "811:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "782:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "779:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "850:33:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "873:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "860:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:23:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "850:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "735:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "746:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "758:6:35",
                "type": ""
              }
            ],
            "src": "699:190:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "998:230:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1044:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1053:6:35"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1061:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1046:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1046:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1046:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1019:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1028:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1015:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1015:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1040:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1011:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1011:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1008:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1079:33:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1102:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1089:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1089:23:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1079:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1121:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1156:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1167:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1152:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1152:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1131:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1131:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1121:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1180:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1207:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1218:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1203:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1203:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1190:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1190:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1180:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "948:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "959:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "971:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "979:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "987:6:35",
                "type": ""
              }
            ],
            "src": "894:334:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1334:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1344:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1356:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1367:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1352:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1352:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1344:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1386:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1401:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1417:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1422:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1413:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1413:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1426:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1409:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1409:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1397:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1397:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1379:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1379:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1379:51:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1303:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1314:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1325:4:35",
                "type": ""
              }
            ],
            "src": "1233:203:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1570:145:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1580:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1592:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1603:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1588:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1580:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1622:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1637:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1653:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1658:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1649:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1649:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1662:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1645:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1645:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1633:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1633:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1615:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1615:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1615:51:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1686:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1697:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1682:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:18:35"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1702:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1675:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1675:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1675:34:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1531:9:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1542:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1550:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1561:4:35",
                "type": ""
              }
            ],
            "src": "1441:274:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1849:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1859:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1871:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1882:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1867:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1867:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1859:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1901:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1916:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1932:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1937:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1928:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1928:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1941:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1924:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1924:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1912:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1912:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1894:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1894:51:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_REUM_ticket_$5279__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1818:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1829:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1840:4:35",
                "type": ""
              }
            ],
            "src": "1720:231:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2130:228:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2147:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2158:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2140:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2140:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2140:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2181:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2192:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2177:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2197:2:35",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2170:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2170:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2220:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2231:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2216:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2216:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2236:34:35",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2209:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2209:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2209:62:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2291:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2302:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2287:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2287:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2307:8:35",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2280:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:36:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2280:36:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2325:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2337:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2348:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2333:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2333:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2325:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2107:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2121:4:35",
                "type": ""
              }
            ],
            "src": "1956:402:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2537:168:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2554:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2565:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2547:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2547:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2547:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2588:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2599:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2584:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2584:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2604:2:35",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2577:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2577:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2577:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2627:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2638:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2623:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2623:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2643:20:35",
                        "type": "",
                        "value": "Vault: non payable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2616:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2616:48:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2616:48:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2673:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2685:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2681:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2673:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2514:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2528:4:35",
                "type": ""
              }
            ],
            "src": "2363:342:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2884:176:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2901:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2912:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2894:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2894:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2894:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2935:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2946:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2931:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2931:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2951:2:35",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2924:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2924:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2924:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2974:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2985:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2970:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2970:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2990:28:35",
                        "type": "",
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2963:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2963:56:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2963:56:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3028:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3040:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3051:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3036:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3036:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3028:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2861:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2875:4:35",
                "type": ""
              }
            ],
            "src": "2710:350:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3239:182:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3256:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3267:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3249:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3249:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3290:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3301:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3286:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3286:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3306:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3279:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3279:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3279:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3329:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3340:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3325:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3325:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3345:34:35",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3318:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3318:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3318:62:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3389:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3401:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3412:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3397:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3397:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3389:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3216:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3230:4:35",
                "type": ""
              }
            ],
            "src": "3065:356:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3600:171:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3617:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3628:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3610:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3610:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3610:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3651:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3662:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3647:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3647:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3667:2:35",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3640:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3640:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3640:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3690:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3701:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3686:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3686:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3706:23:35",
                        "type": "",
                        "value": "Vault: Invalid ticker"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3679:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3679:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3679:51:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3739:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3751:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3762:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3747:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3747:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3739:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3577:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3591:4:35",
                "type": ""
              }
            ],
            "src": "3426:345:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3877:76:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3887:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3899:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3910:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3895:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3895:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3887:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3929:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3940:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3922:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3922:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3922:25:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3846:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3857:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3868:4:35",
                "type": ""
              }
            ],
            "src": "3776:177:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4004:171:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4035:111:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4056:1:35"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4063:3:35",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4068:10:35",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4059:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4059:20:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4049:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4049:31:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4049:31:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4100:1:35",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4103:4:35",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4093:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4093:15:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4093:15:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4128:1:35"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4131:4:35",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4121:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4121:15:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4121:15:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4024:1:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4017:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4017:9:35"
                  },
                  "nodeType": "YulIf",
                  "src": "4014:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4155:14:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4164:1:35"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4167:1:35"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4160:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4160:9:35"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4155:1:35"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3989:1:35",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3992:1:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3998:1:35",
                "type": ""
              }
            ],
            "src": "3958:217:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_REUM_ticket_$5279__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Vault: non payable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Vault: unauthorized access\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Vault: Invalid ticker\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "519:1304:31:-:0;;;585:18;555:48;;677:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:0;-1:-1:-1;;;;;909:18:0;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:0;942:43;;909:6;;942:43;-1:-1:-1;713:13:31;:20;;-1:-1:-1;;;;;;713:20:31;-1:-1:-1;;;;;713:20:31;;;;;761:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;743:15:31;:35;;-1:-1:-1;;;;;;743:35:31;-1:-1:-1;;;;;743:35:31;;;;;;;;;;-1:-1:-1;519:1304:31;;586:96:13;665:10;586:96;:::o;519:1304:31:-;;;;;;;;:::o;14:310:35:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:35;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:35:o;:::-;519:1304:31;;;;;;",
  "deployedSourceMap": "519:1304:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:28;;-1:-1:-1;;;1785:28:31;;;;;;;:::i;:::-;;;;;;;;519:1304;;;;1663:78;;;;;;;;;;;;;:::i;:::-;;555:48;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1519:138;;;;;;;;;;-1:-1:-1;1519:138:31;;;;;:::i;:::-;;:::i;931:582::-;;;;;;;;;;-1:-1:-1;931:582:31;;;;;:::i;:::-;;:::i;1700:145:0:-;;;;;;;;;;;;;:::i;1068:85::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1994:240::-;;;;;;;;;;-1:-1:-1;1994:240:0;;;;;:::i;:::-;;:::i;636:34:31:-;;;;;;;;;;;;;:::i;1663:78::-;1291:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1708:15:31::1;;;;;;;;;-1:-1:-1::0;;;;;1708:15:31::1;-1:-1:-1::0;;;;;1708:24:31::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1663:78::o:0;555:48::-;;;;:::o;1519:138::-;1593:7;1638:12;;1619:16;:31;;;;:::i;:::-;1612:38;;1519:138;;;;:::o;931:582::-;1055:13;;1014:7;;-1:-1:-1;;;;;1055:13:31;1041:10;:27;1033:66;;;;-1:-1:-1;;;1033:66:31;;;;;;;:::i;:::-;-1:-1:-1;;;1113:6:31;:25;1110:396;;;1154:21;1190:12;;1178:9;:24;;;;:::i;:::-;1154:48;;1235:1;1219:13;:17;:48;;;;;1240:15;;;;;;;;;-1:-1:-1;;;;;1240:15:31;-1:-1:-1;;;;;1240:25:31;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1216:100;;;1269:15;;:47;;-1:-1:-1;;;1269:47:31;;-1:-1:-1;;;;;1269:15:31;;;;:26;;:47;;1296:4;;1302:13;;1269:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1216:100;1413:1;1406:8;;;;;1110:396;1475:31;;-1:-1:-1;;;1475:31:31;;;;;;;:::i;1110:396::-;931:582;;;;;:::o;1700:145:0:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;1068:85::-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;1068:85;:::o;1994:240::-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:0::1;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;636:34:31:-;;;-1:-1:-1;;;;;636:34:31;;:::o;586:96:13:-;665:10;586:96;:::o;14:175:35:-;84:20;;-1:-1:-1;;;;;133:31:35;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:297::-;;517:2;505:9;496:7;492:23;488:32;485:2;;;538:6;530;523:22;485:2;575:9;569:16;628:5;621:13;614:21;607:5;604:32;594:2;;655:6;647;640:22;699:190;;811:2;799:9;790:7;786:23;782:32;779:2;;;832:6;824;817:22;779:2;-1:-1:-1;860:23:35;;769:120;-1:-1:-1;769:120:35:o;894:334::-;;;;1040:2;1028:9;1019:7;1015:23;1011:32;1008:2;;;1061:6;1053;1046:22;1008:2;1102:9;1089:23;1079:33;;1131:40;1167:2;1156:9;1152:18;1131:40;:::i;:::-;1121:50;;1218:2;1207:9;1203:18;1190:32;1180:42;;998:230;;;;;:::o;1233:203::-;-1:-1:-1;;;;;1397:32:35;;;;1379:51;;1367:2;1352:18;;1334:102::o;1441:274::-;-1:-1:-1;;;;;1633:32:35;;;;1615:51;;1697:2;1682:18;;1675:34;1603:2;1588:18;;1570:145::o;1956:402::-;2158:2;2140:21;;;2197:2;2177:18;;;2170:30;2236:34;2231:2;2216:18;;2209:62;-1:-1:-1;;;2302:2:35;2287:18;;2280:36;2348:3;2333:19;;2130:228::o;2363:342::-;2565:2;2547:21;;;2604:2;2584:18;;;2577:30;-1:-1:-1;;;2638:2:35;2623:18;;2616:48;2696:2;2681:18;;2537:168::o;2710:350::-;2912:2;2894:21;;;2951:2;2931:18;;;2924:30;2990:28;2985:2;2970:18;;2963:56;3051:2;3036:18;;2884:176::o;3065:356::-;3267:2;3249:21;;;3286:18;;;3279:30;3345:34;3340:2;3325:18;;3318:62;3412:2;3397:18;;3239:182::o;3426:345::-;3628:2;3610:21;;;3667:2;3647:18;;;3640:30;-1:-1:-1;;;3701:2:35;3686:18;;3679:51;3762:2;3747:18;;3600:171::o;3776:177::-;3922:25;;;3910:2;3895:18;;3877:76::o;3958:217::-;;4024:1;4014:2;;-1:-1:-1;;;4049:31:35;;4103:4;4100:1;4093:15;4131:4;4056:1;4121:15;4014:2;-1:-1:-1;4160:9:35;;4004:171::o",
  "source": "// SPDX-License-Identifier: GPL\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./REUM_ticket.sol\";\n\n/// @title Rewardeum Vault v01\n/// @author DrGorilla_md (Tg/Twtr)\n/// @notice vault: minting lottery tickets to win $rsun NFT\n/// @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n/// on a per-asset basis.\n/// Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT\ncontract Vault_01 is Ownable {\n\n    uint256 public ticket_price = 200000000000000000;\n    address main_contract;\n    REUM_ticket public ticket_contract;\n\n    constructor(address reum) {\n        main_contract = reum;\n        ticket_contract = new REUM_ticket();\n    }\n\n    /// @notice custom claim, only called by the main_contract \n    /// @dev this part is updated as needed then redeployed/proxied by main\n    function claim(uint256 claimable,  address dest, bytes32 ticker) external returns (uint256) {\n        require(msg.sender == main_contract, \"Vault: unauthorized access\");\n\n        if(ticker == bytes32(\"RSUN\")) {\n            uint256 NFT_claimable = claimable / ticket_price;\n            if(NFT_claimable > 0 && ticket_contract.isRunning()) ticket_contract.mintTicket(dest, NFT_claimable);\n            //if no more ticket, still processing the claim $rsun (in main)\n            return 0; //all the claimable amount remains\n        }\n\n        else revert(\"Vault: Invalid ticker\");\n    }\n\n    function pending_tickets(uint256 amount_claimable) external view returns (uint256) {\n        return amount_claimable / ticket_price;\n    }\n\n    function stop() external onlyOwner {\n        ticket_contract.hardStop();\n    }\n\n    receive () external payable {\n        revert(\"Vault: non payable\");\n    }\n\n}",
  "sourcePath": "/media/drgorilla/T7 Touch/solidity/Rewardeum/contracts/Vault_01.sol",
  "ast": {
    "absolutePath": "project:/contracts/Vault_01.sol",
    "exportedSymbols": {
      "Address": [
        2421
      ],
      "Context": [
        2444
      ],
      "ERC165": [
        2732
      ],
      "ERC721": [
        1537
      ],
      "ERC721Enumerable": [
        2040
      ],
      "IERC165": [
        2744
      ],
      "IERC721": [
        1684
      ],
      "IERC721Enumerable": [
        2071
      ],
      "IERC721Metadata": [
        2098
      ],
      "IERC721Receiver": [
        1702
      ],
      "Ownable": [
        109
      ],
      "REUM_ticket": [
        5279
      ],
      "Strings": [
        2708
      ],
      "Vault_01": [
        9367
      ]
    },
    "id": 9368,
    "license": "GPL",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9248,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9249,
        "nodeType": "ImportDirective",
        "scope": 9368,
        "sourceUnit": 110,
        "src": "56:52:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 9250,
        "nodeType": "ImportDirective",
        "scope": 9368,
        "sourceUnit": 1685,
        "src": "109:58:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/REUM_ticket.sol",
        "file": "./REUM_ticket.sol",
        "id": 9251,
        "nodeType": "ImportDirective",
        "scope": 9368,
        "sourceUnit": 5280,
        "src": "168:27:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9253,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 109,
              "src": "540:7:31"
            },
            "id": 9254,
            "nodeType": "InheritanceSpecifier",
            "src": "540:7:31"
          }
        ],
        "contractDependencies": [
          109,
          2444,
          5279
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9252,
          "nodeType": "StructuredDocumentation",
          "src": "197:322:31",
          "text": "@title Rewardeum Vault v01\n @author DrGorilla_md (Tg/Twtr)\n @notice vault: minting lottery tickets to win $rsun NFT\n @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n on a per-asset basis.\n Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT"
        },
        "fullyImplemented": true,
        "id": 9367,
        "linearizedBaseContracts": [
          9367,
          109,
          2444
        ],
        "name": "Vault_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "19d41c69",
            "id": 9257,
            "mutability": "mutable",
            "name": "ticket_price",
            "nodeType": "VariableDeclaration",
            "scope": 9367,
            "src": "555:48:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9255,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "555:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323030303030303030303030303030303030",
              "id": 9256,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "585:18:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000000000000000_by_1",
                "typeString": "int_const 200000000000000000"
              },
              "value": "200000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9259,
            "mutability": "mutable",
            "name": "main_contract",
            "nodeType": "VariableDeclaration",
            "scope": 9367,
            "src": "609:21:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9258,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f504a9d5",
            "id": 9262,
            "mutability": "mutable",
            "name": "ticket_contract",
            "nodeType": "VariableDeclaration",
            "scope": 9367,
            "src": "636:34:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_REUM_ticket_$5279",
              "typeString": "contract REUM_ticket"
            },
            "typeName": {
              "id": 9261,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9260,
                "name": "REUM_ticket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5279,
                "src": "636:11:31"
              },
              "referencedDeclaration": 5279,
              "src": "636:11:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                "typeString": "contract REUM_ticket"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9278,
              "nodeType": "Block",
              "src": "703:82:31",
              "statements": [
                {
                  "expression": {
                    "id": 9269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9267,
                      "name": "main_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9259,
                      "src": "713:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9268,
                      "name": "reum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9264,
                      "src": "729:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "713:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9270,
                  "nodeType": "ExpressionStatement",
                  "src": "713:20:31"
                },
                {
                  "expression": {
                    "id": 9276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9271,
                      "name": "ticket_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9262,
                      "src": "743:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "761:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_REUM_ticket_$5279_$",
                          "typeString": "function () returns (contract REUM_ticket)"
                        },
                        "typeName": {
                          "id": 9273,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9272,
                            "name": "REUM_ticket",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5279,
                            "src": "765:11:31"
                          },
                          "referencedDeclaration": 5279,
                          "src": "765:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                            "typeString": "contract REUM_ticket"
                          }
                        }
                      },
                      "id": 9275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "761:17:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "src": "743:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                      "typeString": "contract REUM_ticket"
                    }
                  },
                  "id": 9277,
                  "nodeType": "ExpressionStatement",
                  "src": "743:35:31"
                }
              ]
            },
            "id": 9279,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9264,
                  "mutability": "mutable",
                  "name": "reum",
                  "nodeType": "VariableDeclaration",
                  "scope": 9279,
                  "src": "689:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "688:14:31"
            },
            "returnParameters": {
              "id": 9266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "703:0:31"
            },
            "scope": 9367,
            "src": "677:108:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9334,
              "nodeType": "Block",
              "src": "1023:490:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9292,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1041:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1041:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 9294,
                          "name": "main_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9259,
                          "src": "1055:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1041:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a20756e617574686f72697a656420616363657373",
                        "id": 9296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1070:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        },
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        }
                      ],
                      "id": 9291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1033:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:66:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9298,
                  "nodeType": "ExpressionStatement",
                  "src": "1033:66:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 9304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9299,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9286,
                      "src": "1113:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "5253554e",
                          "id": 9302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1131:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          },
                          "value": "RSUN"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          }
                        ],
                        "id": 9301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1123:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 9300,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1123:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1123:15:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1113:25:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "5661756c743a20496e76616c6964207469636b6572",
                          "id": 9330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1482:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          },
                          "value": "Vault: Invalid ticker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          }
                        ],
                        "id": 9329,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "1475:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 9331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1475:31:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 9332,
                    "nodeType": "ExpressionStatement",
                    "src": "1475:31:31"
                  },
                  "id": 9333,
                  "nodeType": "IfStatement",
                  "src": "1110:396:31",
                  "trueBody": {
                    "id": 9328,
                    "nodeType": "Block",
                    "src": "1140:320:31",
                    "statements": [
                      {
                        "assignments": [
                          9306
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9306,
                            "mutability": "mutable",
                            "name": "NFT_claimable",
                            "nodeType": "VariableDeclaration",
                            "scope": 9328,
                            "src": "1154:21:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9305,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1154:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9310,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9307,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9282,
                            "src": "1178:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 9308,
                            "name": "ticket_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9257,
                            "src": "1190:12:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1178:24:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1154:48:31"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 9317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 9311,
                              "name": "NFT_claimable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9306,
                              "src": "1219:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 9312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1235:1:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1219:17:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 9314,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9262,
                                "src": "1240:15:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 9315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isRunning",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5260,
                              "src": "1240:25:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                "typeString": "function () view external returns (bool)"
                              }
                            },
                            "id": 9316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1240:27:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1219:48:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9325,
                        "nodeType": "IfStatement",
                        "src": "1216:100:31",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 9321,
                                "name": "dest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9284,
                                "src": "1296:4:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 9322,
                                "name": "NFT_claimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9306,
                                "src": "1302:13:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9318,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9262,
                                "src": "1269:15:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 9320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mintTicket",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5214,
                              "src": "1269:26:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256) external"
                              }
                            },
                            "id": 9323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1269:47:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 9324,
                          "nodeType": "ExpressionStatement",
                          "src": "1269:47:31"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 9326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1413:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 9290,
                        "id": 9327,
                        "nodeType": "Return",
                        "src": "1406:8:31"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9280,
              "nodeType": "StructuredDocumentation",
              "src": "791:135:31",
              "text": "@notice custom claim, only called by the main_contract \n @dev this part is updated as needed then redeployed/proxied by main"
            },
            "functionSelector": "306cbb20",
            "id": 9335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9282,
                  "mutability": "mutable",
                  "name": "claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 9335,
                  "src": "946:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9284,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 9335,
                  "src": "966:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9286,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 9335,
                  "src": "980:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9285,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "945:50:31"
            },
            "returnParameters": {
              "id": 9290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9289,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9335,
                  "src": "1014:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:9:31"
            },
            "scope": 9367,
            "src": "931:582:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9346,
              "nodeType": "Block",
              "src": "1602:55:31",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9342,
                      "name": "amount_claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9337,
                      "src": "1619:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 9343,
                      "name": "ticket_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9257,
                      "src": "1638:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1619:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9341,
                  "id": 9345,
                  "nodeType": "Return",
                  "src": "1612:38:31"
                }
              ]
            },
            "functionSelector": "2f2bcd33",
            "id": 9347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pending_tickets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9337,
                  "mutability": "mutable",
                  "name": "amount_claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 9347,
                  "src": "1544:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:26:31"
            },
            "returnParameters": {
              "id": 9341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9340,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9347,
                  "src": "1593:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1592:9:31"
            },
            "scope": 9367,
            "src": "1519:138:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9357,
              "nodeType": "Block",
              "src": "1698:43:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9352,
                        "name": "ticket_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9262,
                        "src": "1708:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                          "typeString": "contract REUM_ticket"
                        }
                      },
                      "id": 9354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hardStop",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5270,
                      "src": "1708:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 9355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1708:26:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9356,
                  "nodeType": "ExpressionStatement",
                  "src": "1708:26:31"
                }
              ]
            },
            "functionSelector": "07da68f5",
            "id": 9358,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9350,
                "modifierName": {
                  "id": 9349,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1688:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1688:9:31"
              }
            ],
            "name": "stop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1676:2:31"
            },
            "returnParameters": {
              "id": 9351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:0:31"
            },
            "scope": 9367,
            "src": "1663:78:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9365,
              "nodeType": "Block",
              "src": "1775:45:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5661756c743a206e6f6e2070617961626c65",
                        "id": 9362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1792:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        },
                        "value": "Vault: non payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        }
                      ],
                      "id": 9361,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1785:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 9363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:28:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9364,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:28:31"
                }
              ]
            },
            "id": 9366,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1755:2:31"
            },
            "returnParameters": {
              "id": 9360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1775:0:31"
            },
            "scope": 9367,
            "src": "1747:73:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9368,
        "src": "519:1304:31"
      }
    ],
    "src": "32:1791:31"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Vault_01.sol",
    "exportedSymbols": {
      "Address": [
        2421
      ],
      "Context": [
        2444
      ],
      "ERC165": [
        2732
      ],
      "ERC721": [
        1537
      ],
      "ERC721Enumerable": [
        2040
      ],
      "IERC165": [
        2744
      ],
      "IERC721": [
        1684
      ],
      "IERC721Enumerable": [
        2071
      ],
      "IERC721Metadata": [
        2098
      ],
      "IERC721Receiver": [
        1702
      ],
      "Ownable": [
        109
      ],
      "REUM_ticket": [
        5279
      ],
      "Strings": [
        2708
      ],
      "Vault_01": [
        9367
      ]
    },
    "id": 9368,
    "license": "GPL",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9248,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9249,
        "nodeType": "ImportDirective",
        "scope": 9368,
        "sourceUnit": 110,
        "src": "56:52:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 9250,
        "nodeType": "ImportDirective",
        "scope": 9368,
        "sourceUnit": 1685,
        "src": "109:58:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/REUM_ticket.sol",
        "file": "./REUM_ticket.sol",
        "id": 9251,
        "nodeType": "ImportDirective",
        "scope": 9368,
        "sourceUnit": 5280,
        "src": "168:27:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9253,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 109,
              "src": "540:7:31"
            },
            "id": 9254,
            "nodeType": "InheritanceSpecifier",
            "src": "540:7:31"
          }
        ],
        "contractDependencies": [
          109,
          2444,
          5279
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9252,
          "nodeType": "StructuredDocumentation",
          "src": "197:322:31",
          "text": "@title Rewardeum Vault v01\n @author DrGorilla_md (Tg/Twtr)\n @notice vault: minting lottery tickets to win $rsun NFT\n @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n on a per-asset basis.\n Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT"
        },
        "fullyImplemented": true,
        "id": 9367,
        "linearizedBaseContracts": [
          9367,
          109,
          2444
        ],
        "name": "Vault_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "19d41c69",
            "id": 9257,
            "mutability": "mutable",
            "name": "ticket_price",
            "nodeType": "VariableDeclaration",
            "scope": 9367,
            "src": "555:48:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9255,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "555:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323030303030303030303030303030303030",
              "id": 9256,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "585:18:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000000000000000_by_1",
                "typeString": "int_const 200000000000000000"
              },
              "value": "200000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9259,
            "mutability": "mutable",
            "name": "main_contract",
            "nodeType": "VariableDeclaration",
            "scope": 9367,
            "src": "609:21:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9258,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f504a9d5",
            "id": 9262,
            "mutability": "mutable",
            "name": "ticket_contract",
            "nodeType": "VariableDeclaration",
            "scope": 9367,
            "src": "636:34:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_REUM_ticket_$5279",
              "typeString": "contract REUM_ticket"
            },
            "typeName": {
              "id": 9261,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9260,
                "name": "REUM_ticket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5279,
                "src": "636:11:31"
              },
              "referencedDeclaration": 5279,
              "src": "636:11:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                "typeString": "contract REUM_ticket"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9278,
              "nodeType": "Block",
              "src": "703:82:31",
              "statements": [
                {
                  "expression": {
                    "id": 9269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9267,
                      "name": "main_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9259,
                      "src": "713:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9268,
                      "name": "reum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9264,
                      "src": "729:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "713:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9270,
                  "nodeType": "ExpressionStatement",
                  "src": "713:20:31"
                },
                {
                  "expression": {
                    "id": 9276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9271,
                      "name": "ticket_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9262,
                      "src": "743:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "761:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_REUM_ticket_$5279_$",
                          "typeString": "function () returns (contract REUM_ticket)"
                        },
                        "typeName": {
                          "id": 9273,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9272,
                            "name": "REUM_ticket",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5279,
                            "src": "765:11:31"
                          },
                          "referencedDeclaration": 5279,
                          "src": "765:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                            "typeString": "contract REUM_ticket"
                          }
                        }
                      },
                      "id": 9275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "761:17:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "src": "743:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                      "typeString": "contract REUM_ticket"
                    }
                  },
                  "id": 9277,
                  "nodeType": "ExpressionStatement",
                  "src": "743:35:31"
                }
              ]
            },
            "id": 9279,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9264,
                  "mutability": "mutable",
                  "name": "reum",
                  "nodeType": "VariableDeclaration",
                  "scope": 9279,
                  "src": "689:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "688:14:31"
            },
            "returnParameters": {
              "id": 9266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "703:0:31"
            },
            "scope": 9367,
            "src": "677:108:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9334,
              "nodeType": "Block",
              "src": "1023:490:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9292,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1041:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1041:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 9294,
                          "name": "main_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9259,
                          "src": "1055:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1041:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a20756e617574686f72697a656420616363657373",
                        "id": 9296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1070:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        },
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        }
                      ],
                      "id": 9291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1033:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:66:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9298,
                  "nodeType": "ExpressionStatement",
                  "src": "1033:66:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 9304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9299,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9286,
                      "src": "1113:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "5253554e",
                          "id": 9302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1131:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          },
                          "value": "RSUN"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          }
                        ],
                        "id": 9301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1123:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 9300,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1123:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1123:15:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1113:25:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "5661756c743a20496e76616c6964207469636b6572",
                          "id": 9330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1482:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          },
                          "value": "Vault: Invalid ticker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          }
                        ],
                        "id": 9329,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "1475:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 9331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1475:31:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 9332,
                    "nodeType": "ExpressionStatement",
                    "src": "1475:31:31"
                  },
                  "id": 9333,
                  "nodeType": "IfStatement",
                  "src": "1110:396:31",
                  "trueBody": {
                    "id": 9328,
                    "nodeType": "Block",
                    "src": "1140:320:31",
                    "statements": [
                      {
                        "assignments": [
                          9306
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9306,
                            "mutability": "mutable",
                            "name": "NFT_claimable",
                            "nodeType": "VariableDeclaration",
                            "scope": 9328,
                            "src": "1154:21:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9305,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1154:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9310,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9307,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9282,
                            "src": "1178:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 9308,
                            "name": "ticket_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9257,
                            "src": "1190:12:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1178:24:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1154:48:31"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 9317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 9311,
                              "name": "NFT_claimable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9306,
                              "src": "1219:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 9312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1235:1:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1219:17:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 9314,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9262,
                                "src": "1240:15:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 9315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isRunning",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5260,
                              "src": "1240:25:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                "typeString": "function () view external returns (bool)"
                              }
                            },
                            "id": 9316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1240:27:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1219:48:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9325,
                        "nodeType": "IfStatement",
                        "src": "1216:100:31",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 9321,
                                "name": "dest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9284,
                                "src": "1296:4:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 9322,
                                "name": "NFT_claimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9306,
                                "src": "1302:13:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9318,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9262,
                                "src": "1269:15:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 9320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mintTicket",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5214,
                              "src": "1269:26:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256) external"
                              }
                            },
                            "id": 9323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1269:47:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 9324,
                          "nodeType": "ExpressionStatement",
                          "src": "1269:47:31"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 9326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1413:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 9290,
                        "id": 9327,
                        "nodeType": "Return",
                        "src": "1406:8:31"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9280,
              "nodeType": "StructuredDocumentation",
              "src": "791:135:31",
              "text": "@notice custom claim, only called by the main_contract \n @dev this part is updated as needed then redeployed/proxied by main"
            },
            "functionSelector": "306cbb20",
            "id": 9335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9282,
                  "mutability": "mutable",
                  "name": "claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 9335,
                  "src": "946:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9284,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 9335,
                  "src": "966:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9286,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 9335,
                  "src": "980:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9285,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "945:50:31"
            },
            "returnParameters": {
              "id": 9290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9289,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9335,
                  "src": "1014:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:9:31"
            },
            "scope": 9367,
            "src": "931:582:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9346,
              "nodeType": "Block",
              "src": "1602:55:31",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9342,
                      "name": "amount_claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9337,
                      "src": "1619:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 9343,
                      "name": "ticket_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9257,
                      "src": "1638:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1619:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9341,
                  "id": 9345,
                  "nodeType": "Return",
                  "src": "1612:38:31"
                }
              ]
            },
            "functionSelector": "2f2bcd33",
            "id": 9347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pending_tickets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9337,
                  "mutability": "mutable",
                  "name": "amount_claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 9347,
                  "src": "1544:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:26:31"
            },
            "returnParameters": {
              "id": 9341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9340,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9347,
                  "src": "1593:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1592:9:31"
            },
            "scope": 9367,
            "src": "1519:138:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9357,
              "nodeType": "Block",
              "src": "1698:43:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9352,
                        "name": "ticket_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9262,
                        "src": "1708:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_REUM_ticket_$5279",
                          "typeString": "contract REUM_ticket"
                        }
                      },
                      "id": 9354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hardStop",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5270,
                      "src": "1708:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 9355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1708:26:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9356,
                  "nodeType": "ExpressionStatement",
                  "src": "1708:26:31"
                }
              ]
            },
            "functionSelector": "07da68f5",
            "id": 9358,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9350,
                "modifierName": {
                  "id": 9349,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1688:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1688:9:31"
              }
            ],
            "name": "stop",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1676:2:31"
            },
            "returnParameters": {
              "id": 9351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:0:31"
            },
            "scope": 9367,
            "src": "1663:78:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9365,
              "nodeType": "Block",
              "src": "1775:45:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5661756c743a206e6f6e2070617961626c65",
                        "id": 9362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1792:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        },
                        "value": "Vault: non payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        }
                      ],
                      "id": 9361,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1785:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 9363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:28:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9364,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:28:31"
                }
              ]
            },
            "id": 9366,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1755:2:31"
            },
            "returnParameters": {
              "id": 9360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1775:0:31"
            },
            "scope": 9367,
            "src": "1747:73:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9368,
        "src": "519:1304:31"
      }
    ],
    "src": "32:1791:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "56": {
      "events": {},
      "links": {},
      "address": "0xD4B1dB65C25D549dF364c665e1C5c065C2A97bD3",
      "transactionHash": "0x79ed246c2107e932f0bed1afd0fc739b8b14eddb0252b9e25be3a8d9d86b92b6"
    },
    "97": {
      "events": {},
      "links": {},
      "address": "0xB35E209658d2833fc955869F100e2596F2612E35",
      "transactionHash": "0x46c936b48a4c4c56dd5ca7a94699731afae1abc0a80ce638b2dac5e3fe394c96"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-09-22T21:46:34.411Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "DrGorilla_md (Tg/Twtr)",
    "details": "contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms on a per-asset basis. Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT",
    "kind": "dev",
    "methods": {
      "claim(uint256,address,bytes32)": {
        "details": "this part is updated as needed then redeployed/proxied by main"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Rewardeum Vault v01",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim(uint256,address,bytes32)": {
        "notice": "custom claim, only called by the main_contract "
      }
    },
    "notice": "vault: minting lottery tickets to win $rsun NFT",
    "version": 1
  }
}