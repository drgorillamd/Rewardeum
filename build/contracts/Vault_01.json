{
  "contractName": "Vault_01",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "reum",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ticket_contract",
      "outputs": [
        {
          "internalType": "contract REUM_ticket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "ticket_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimable",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_claimable",
          "type": "uint256"
        }
      ],
      "name": "pending_tickets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reum\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_claimable\",\"type\":\"uint256\"}],\"name\":\"pending_tickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticket_contract\",\"outputs\":[{\"internalType\":\"contract REUM_ticket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticket_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"DrGorilla_md (Tg/Twtr)\",\"details\":\"contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms on a per-asset basis Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT\",\"kind\":\"dev\",\"methods\":{\"claim(uint256,address,bytes32)\":{\"details\":\"this part is updated as needed then redeployed/proxied by main\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Rewardeum Vault v01\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256,address,bytes32)\":{\"notice\":\"custom claim, only called by the main_contract \"}},\"notice\":\"vault: minting lottery tickets to win $rsun NFT\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Vault_01.sol\":\"Vault_01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2d9f9af8b84d252e0e7ee716e4cb3ad1b58f3ec6619e4f54f40d4b5e28f75eb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d6abdcb4cd5be9933f526b53f21008e9a7ab75ce134478625cc8ccd3c1a638\",\"dweb:/ipfs/QmZrzWUYmNANRCvHaMGsJQXYnWCe6HvMmvrqaPn1GEcpJ1\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba34b5028b6a297467a7364d9af182649dee0611a0f9620ec27ce10647885cad\",\"dweb:/ipfs/QmWhGtHDcAYWA31f3Ze9izeh3SPMRzcFagTUwxExLg3sRc\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/REUM_ticket.sol\":{\"keccak256\":\"0x6de28ee27132f7792382dcfb1024d286311bd4463cf5ddea53c8bc0d08952545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30d07627a36ede40169783c4906eebdca9c255e10fbed8398cfa05347df5317\",\"dweb:/ipfs/QmXKism5tHZ2Kn6W58rLRRU8tnDRjt2pnwUyYksDujyGjd\"]},\"project:/contracts/Vault_01.sol\":{\"keccak256\":\"0x45789b37692e1f5d35aa2e3bb73f113fd19fafdaebd7b5d3da526464f93cf6ff\",\"license\":\"GPL\",\"urls\":[\"bzz-raw://6ca9a7d303399bc04546bf6d7f5644b2892150ec55a8f8616bf380134d30d161\",\"dweb:/ipfs/QmdWeCc9s5nh8t2h3abzq4ShuA6yXsyDfPDeYUSF6d4tLX\"]}},\"version\":1}",
  "bytecode": "0x6080604052660aa87bee53800060015534801561001b57600080fd5b506040516126ca3803806126ca83398101604081905261003a91610109565b60006100446100f8565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b0319166001600160a01b0383161790556040516100b5906100fc565b604051809103906000f0801580156100d1573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b039290921691909117905550610137565b3390565b611f738061075783390190565b60006020828403121561011a578081fd5b81516001600160a01b0381168114610130578182fd5b9392505050565b610611806101466000396000f3fe6080604052600436106100745760003560e01c8063715018a61161004e578063715018a6146101175780638da5cb5b1461012e578063f2fde38b14610150578063f504a9d5146101705761009a565b806319d41c691461009f5780632f2bcd33146100ca578063306cbb20146100ea5761009a565b3661009a5760405162461bcd60e51b8152600401610091906104eb565b60405180910390fd5b600080fd5b3480156100ab57600080fd5b506100b4610185565b6040516100c191906105b2565b60405180910390f35b3480156100d657600080fd5b506100b46100e5366004610421565b61018b565b3480156100f657600080fd5b5061010a610105366004610439565b6101a3565b6040516100c1919061049a565b34801561012357600080fd5b5061012c610285565b005b34801561013a57600080fd5b5061014361030e565b6040516100c1919061046d565b34801561015c57600080fd5b5061012c61016b366004610407565b61031d565b34801561017c57600080fd5b506101436103dd565b60015481565b60006001548261019b91906105bb565b90505b919050565b6002546000906001600160a01b031633146101d05760405162461bcd60e51b815260040161009190610517565b632929aaa760e11b821415610266576000600154856101ef91906105bb565b9050801561025c576003546040516352fbfa3360e11b81526001600160a01b039091169063a5f7f466906102299087908590600401610481565b600060405180830381600087803b15801561024357600080fd5b505af1158015610257573d6000803e3d6000fd5b505050505b600191505061027e565b60405162461bcd60e51b815260040161009190610583565b9392505050565b61028d6103ec565b6001600160a01b031661029e61030e565b6001600160a01b0316146102c45760405162461bcd60e51b81526004016100919061054e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6103256103ec565b6001600160a01b031661033661030e565b6001600160a01b03161461035c5760405162461bcd60e51b81526004016100919061054e565b6001600160a01b0381166103825760405162461bcd60e51b8152600401610091906104a5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b3390565b80356001600160a01b038116811461019e57600080fd5b600060208284031215610418578081fd5b61027e826103f0565b600060208284031215610432578081fd5b5035919050565b60008060006060848603121561044d578182fd5b8335925061045d602085016103f0565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152715661756c743a206e6f6e2070617961626c6560701b604082015260600190565b6020808252601a908201527f5661756c743a20756e617574686f72697a656420616363657373000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601590820152742b30bab63a1d1024b73b30b634b2103a34b1b5b2b960591b604082015260600190565b90815260200190565b6000826105d657634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220bac0e48791f2c02eedaeeb6ed705eb7ee07faf1b4611c58f926d132a89e0512364736f6c634300080000336080604052612710600d553480156200001757600080fd5b5060408051808201825260078152664c4f545445525960c81b6020808301918252835180850190945260098452682922aaa6bc2929aaa760b91b90840152815191929162000068916000916200011c565b5080516200007e9060019060208401906200011c565b5050506000620000936200011860201b60201c565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060405180606001604052806032815260200162001f416032913980516200011191600b916020909101906200011c565b50620001ff565b3390565b8280546200012a90620001c2565b90600052602060002090601f0160209004810192826200014e576000855562000199565b82601f106200016957805160ff191683800117855562000199565b8280016001018555821562000199579182015b82811115620001995782518255916020019190600101906200017c565b50620001a7929150620001ab565b5090565b5b80821115620001a75760008155600101620001ac565b600281046001821680620001d757607f821691505b60208210811415620001f957634e487b7160e01b600052602260045260246000fd5b50919050565b611d32806200020f6000396000f3fe6080604052600436106101445760003560e01c806370a08231116100b6578063b88d4fde1161006f578063b88d4fde1461038c578063c87b56dd146103ac578063e5aca894146103cc578063e8a3d485146103ec578063e985e9c514610401578063f2fde38b146104215761016a565b806370a08231146102ed578063715018a61461030d5780638da5cb5b1461032257806395d89b4114610337578063a22cb4651461034c578063a5f7f4661461036c5761016a565b80631c10b8ca116101085780631c10b8ca1461023857806323b872dd1461024d5780632f745c591461026d57806342842e0e1461028d5780634f6ccce7146102ad5780636352211e146102cd5761016a565b806301ffc9a71461016f57806306fdde03146101a5578063081812fc146101c7578063095ea7b3146101f457806318160ddd146102165761016a565b3661016a5760405162461bcd60e51b815260040161016190611b27565b60405180910390fd5b600080fd5b34801561017b57600080fd5b5061018f61018a366004611560565b610441565b60405161019c9190611692565b60405180910390f35b3480156101b157600080fd5b506101ba61046e565b60405161019c919061169d565b3480156101d357600080fd5b506101e76101e23660046115de565b610500565b60405161019c9190611641565b34801561020057600080fd5b5061021461020f366004611537565b610543565b005b34801561022257600080fd5b5061022b6105db565b60405161019c9190611bfb565b34801561024457600080fd5b5061022b6105e1565b34801561025957600080fd5b50610214610268366004611449565b6105e7565b34801561027957600080fd5b5061022b610288366004611537565b61061f565b34801561029957600080fd5b506102146102a8366004611449565b610671565b3480156102b957600080fd5b5061022b6102c83660046115de565b61068c565b3480156102d957600080fd5b506101e76102e83660046115de565b6106e7565b3480156102f957600080fd5b5061022b6103083660046113f6565b61071c565b34801561031957600080fd5b50610214610760565b34801561032e57600080fd5b506101e76107e9565b34801561034357600080fd5b506101ba6107f8565b34801561035857600080fd5b506102146103673660046114fd565b610807565b34801561037857600080fd5b50610214610387366004611537565b6108d5565b34801561039857600080fd5b506102146103a7366004611484565b6109a9565b3480156103b857600080fd5b506101ba6103c73660046115de565b6109e8565b3480156103d857600080fd5b506102146103e7366004611598565b610a2e565b3480156103f857600080fd5b506101ba610a84565b34801561040d57600080fd5b5061018f61041c366004611417565b610a93565b34801561042d57600080fd5b5061021461043c3660046113f6565b610ac1565b60006001600160e01b0319821663780e9d6360e01b1480610466575061046682610b82565b90505b919050565b60606000805461047d90611c33565b80601f01602080910402602001604051908101604052809291908181526020018280546104a990611c33565b80156104f65780601f106104cb576101008083540402835291602001916104f6565b820191906000526020600020905b8154815290600101906020018083116104d957829003601f168201915b5050505050905090565b600061050b82610bc2565b6105275760405162461bcd60e51b815260040161016190611a1c565b506000908152600460205260409020546001600160a01b031690565b600061054e826106e7565b9050806001600160a01b0316836001600160a01b031614156105825760405162461bcd60e51b815260040161016190611ae6565b806001600160a01b0316610594610bdf565b6001600160a01b031614806105b057506105b08161041c610bdf565b6105cc5760405162461bcd60e51b8152600401610161906118c0565b6105d68383610be3565b505050565b60085490565b600d5481565b6105f86105f2610bdf565b82610c51565b6106145760405162461bcd60e51b815260040161016190611b5e565b6105d6838383610cd6565b600061062a8361071c565b82106106485760405162461bcd60e51b8152600401610161906116b0565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6105d6838383604051806020016040528060008152506109a9565b60006106966105db565b82106106b45760405162461bcd60e51b815260040161016190611baf565b600882815481106106d557634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806104665760405162461bcd60e51b815260040161016190611967565b60006001600160a01b0382166107445760405162461bcd60e51b81526004016101619061191d565b506001600160a01b031660009081526003602052604090205490565b610768610bdf565b6001600160a01b03166107796107e9565b6001600160a01b03161461079f5760405162461bcd60e51b815260040161016190611a68565b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b600a546001600160a01b031690565b60606001805461047d90611c33565b61080f610bdf565b6001600160a01b0316826001600160a01b031614156108405760405162461bcd60e51b81526004016101619061180e565b806005600061084d610bdf565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610891610bdf565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516108c99190611692565b60405180910390a35050565b6108dd610bdf565b6001600160a01b03166108ee6107e9565b6001600160a01b0316146109145760405162461bcd60e51b815260040161016190611a68565b600c54600d5481106109385760405162461bcd60e51b8152600401610161906119b0565b600d546000906109488484611c04565b10156109545782610962565b81600d546109629190611c1c565b905060005b818110156109a257600c805490600061097f83611c6e565b919050555061099085600c54610e03565b8061099a81611c6e565b915050610967565b5050505050565b6109ba6109b4610bdf565b83610c51565b6109d65760405162461bcd60e51b815260040161016190611b5e565b6109e284848484610ee2565b50505050565b60606109f382610bc2565b610a0f5760405162461bcd60e51b815260040161016190611891565b6040518060600160405280602e8152602001611ccf602e913992915050565b610a36610bdf565b6001600160a01b0316610a476107e9565b6001600160a01b031614610a6d5760405162461bcd60e51b815260040161016190611a68565b8051610a8090600b9060208401906112d6565b5050565b6060600b805461047d90611c33565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610ac9610bdf565b6001600160a01b0316610ada6107e9565b6001600160a01b031614610b005760405162461bcd60e51b815260040161016190611a68565b6001600160a01b038116610b265760405162461bcd60e51b81526004016101619061174d565b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b031982166380ac58cd60e01b1480610bb357506001600160e01b03198216635b5e139f60e01b145b80610466575061046682610f15565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c18826106e7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610c5c82610bc2565b610c785760405162461bcd60e51b815260040161016190611845565b6000610c83836106e7565b9050806001600160a01b0316846001600160a01b03161480610cbe5750836001600160a01b0316610cb384610500565b6001600160a01b0316145b80610cce5750610cce8185610a93565b949350505050565b826001600160a01b0316610ce9826106e7565b6001600160a01b031614610d0f5760405162461bcd60e51b815260040161016190611a9d565b6001600160a01b038216610d355760405162461bcd60e51b8152600401610161906117ca565b610d40838383610f2e565b610d4b600082610be3565b6001600160a01b0383166000908152600360205260408120805460019290610d74908490611c1c565b90915550506001600160a01b0382166000908152600360205260408120805460019290610da2908490611c04565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610e295760405162461bcd60e51b8152600401610161906119e7565b610e3281610bc2565b15610e4f5760405162461bcd60e51b815260040161016190611793565b610e5b60008383610f2e565b6001600160a01b0382166000908152600360205260408120805460019290610e84908490611c04565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610eed848484610cd6565b610ef984848484610fb7565b6109e25760405162461bcd60e51b8152600401610161906116fb565b6001600160e01b031981166301ffc9a760e01b14919050565b610f398383836105d6565b6001600160a01b038316610f5557610f50816110d2565b610f78565b816001600160a01b0316836001600160a01b031614610f7857610f788382611116565b6001600160a01b038216610f9457610f8f816111b3565b6105d6565b826001600160a01b0316826001600160a01b0316146105d6576105d6828261128c565b6000610fcb846001600160a01b03166112d0565b156110c757836001600160a01b031663150b7a02610fe7610bdf565b8786866040518563ffffffff1660e01b81526004016110099493929190611655565b602060405180830381600087803b15801561102357600080fd5b505af1925050508015611053575060408051601f3d908101601f191682019092526110509181019061157c565b60015b6110ad573d808015611081576040519150601f19603f3d011682016040523d82523d6000602084013e611086565b606091505b5080516110a55760405162461bcd60e51b8152600401610161906116fb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610cce565b506001949350505050565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600060016111238461071c565b61112d9190611c1c565b600083815260076020526040902054909150808214611180576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906111c590600190611c1c565b600083815260096020526040812054600880549394509092849081106111fb57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806008838154811061122a57634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061127057634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b60006112978361071c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b3b151590565b8280546112e290611c33565b90600052602060002090601f016020900481019282611304576000855561134a565b82601f1061131d57805160ff191683800117855561134a565b8280016001018555821561134a579182015b8281111561134a57825182559160200191906001019061132f565b5061135692915061135a565b5090565b5b80821115611356576000815560010161135b565b600067ffffffffffffffff8084111561138a5761138a611c9f565b604051601f8501601f1916810160200182811182821017156113ae576113ae611c9f565b6040528481529150818385018610156113c657600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b038116811461046957600080fd5b600060208284031215611407578081fd5b611410826113df565b9392505050565b60008060408385031215611429578081fd5b611432836113df565b9150611440602084016113df565b90509250929050565b60008060006060848603121561145d578081fd5b611466846113df565b9250611474602085016113df565b9150604084013590509250925092565b60008060008060808587031215611499578081fd5b6114a2856113df565b93506114b0602086016113df565b925060408501359150606085013567ffffffffffffffff8111156114d2578182fd5b8501601f810187136114e2578182fd5b6114f18782356020840161136f565b91505092959194509250565b6000806040838503121561150f578182fd5b611518836113df565b91506020830135801515811461152c578182fd5b809150509250929050565b60008060408385031215611549578182fd5b611552836113df565b946020939093013593505050565b600060208284031215611571578081fd5b813561141081611cb5565b60006020828403121561158d578081fd5b815161141081611cb5565b6000602082840312156115a9578081fd5b813567ffffffffffffffff8111156115bf578182fd5b8201601f810184136115cf578182fd5b610cce8482356020840161136f565b6000602082840312156115ef578081fd5b5035919050565b60008151808452815b8181101561161b576020818501810151868301820152016115ff565b8181111561162c5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611688908301846115f6565b9695505050505050565b901515815260200190565b60006020825261141060208301846115f6565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526015908201527424b73b30b634b2103a34b1b5b2ba10373ab6b132b960591b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b60208082526017908201527f4e6f206d6f7265207469636b65747320746f206d696e74000000000000000000604082015260600190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526019908201527f5245554d204c6f74746572793a206e6f6e2070617961626c6500000000000000604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b90815260200190565b60008219821115611c1757611c17611c89565b500190565b600082821015611c2e57611c2e611c89565b500390565b600281046001821680611c4757607f821691505b60208210811415611c6857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611c8257611c82611c89565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114611ccb57600080fd5b5056fe68747470733a2f2f7777772e72657761726465756d2e636f6d2f696d616765732f6d657461646174612e6a736f6ea26469706673582212209893a44b735645fe0fa6d061260894f3a0ee261ed51c6e9c6bca0ba7b74c9f4e64736f6c6343000800003368747470733a2f2f7777772e72657761726465756d2e636f6d2f696d616765732f636f6e74726163745f7572692e6a736f6e",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063715018a61161004e578063715018a6146101175780638da5cb5b1461012e578063f2fde38b14610150578063f504a9d5146101705761009a565b806319d41c691461009f5780632f2bcd33146100ca578063306cbb20146100ea5761009a565b3661009a5760405162461bcd60e51b8152600401610091906104eb565b60405180910390fd5b600080fd5b3480156100ab57600080fd5b506100b4610185565b6040516100c191906105b2565b60405180910390f35b3480156100d657600080fd5b506100b46100e5366004610421565b61018b565b3480156100f657600080fd5b5061010a610105366004610439565b6101a3565b6040516100c1919061049a565b34801561012357600080fd5b5061012c610285565b005b34801561013a57600080fd5b5061014361030e565b6040516100c1919061046d565b34801561015c57600080fd5b5061012c61016b366004610407565b61031d565b34801561017c57600080fd5b506101436103dd565b60015481565b60006001548261019b91906105bb565b90505b919050565b6002546000906001600160a01b031633146101d05760405162461bcd60e51b815260040161009190610517565b632929aaa760e11b821415610266576000600154856101ef91906105bb565b9050801561025c576003546040516352fbfa3360e11b81526001600160a01b039091169063a5f7f466906102299087908590600401610481565b600060405180830381600087803b15801561024357600080fd5b505af1158015610257573d6000803e3d6000fd5b505050505b600191505061027e565b60405162461bcd60e51b815260040161009190610583565b9392505050565b61028d6103ec565b6001600160a01b031661029e61030e565b6001600160a01b0316146102c45760405162461bcd60e51b81526004016100919061054e565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6103256103ec565b6001600160a01b031661033661030e565b6001600160a01b03161461035c5760405162461bcd60e51b81526004016100919061054e565b6001600160a01b0381166103825760405162461bcd60e51b8152600401610091906104a5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b3390565b80356001600160a01b038116811461019e57600080fd5b600060208284031215610418578081fd5b61027e826103f0565b600060208284031215610432578081fd5b5035919050565b60008060006060848603121561044d578182fd5b8335925061045d602085016103f0565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152715661756c743a206e6f6e2070617961626c6560701b604082015260600190565b6020808252601a908201527f5661756c743a20756e617574686f72697a656420616363657373000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601590820152742b30bab63a1d1024b73b30b634b2103a34b1b5b2b960591b604082015260600190565b90815260200190565b6000826105d657634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220bac0e48791f2c02eedaeeb6ed705eb7ee07faf1b4611c58f926d132a89e0512364736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:25"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:25",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:25",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:25"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:25",
                "type": ""
              }
            ],
            "src": "14:310:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4067:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:25",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:25",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:25"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:25"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:25",
                "type": ""
              }
            ],
            "src": "14:175:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:25",
                "type": ""
              }
            ],
            "src": "194:198:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "467:120:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "513:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "522:6:25"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "530:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "515:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "515:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "515:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "488:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "497:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "484:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "484:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "480:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "480:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "477:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "548:33:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "571:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "558:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "558:23:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "548:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "433:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "444:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "456:6:25",
                "type": ""
              }
            ],
            "src": "397:190:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "696:230:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "742:26:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "751:6:25"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "759:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "744:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "744:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "744:22:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "717:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "726:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "713:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "713:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "738:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "709:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "709:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "706:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "777:33:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "800:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "787:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "787:23:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "777:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "819:50:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "854:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "865:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "850:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "850:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "829:20:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "829:40:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "819:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "878:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "905:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "916:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "901:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "901:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "888:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "888:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "878:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "646:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "657:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "669:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "677:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "685:6:25",
                "type": ""
              }
            ],
            "src": "592:334:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1032:102:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1042:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1054:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1065:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1050:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1042:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1084:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1099:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1115:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1120:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1111:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1111:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1124:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1107:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1107:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1077:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1077:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1077:51:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1001:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1012:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1023:4:25",
                "type": ""
              }
            ],
            "src": "931:203:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1268:145:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1278:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1290:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1301:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1286:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1286:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1278:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1320:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1335:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1351:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1356:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1347:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1347:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1360:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1343:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1343:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1331:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1331:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1313:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1313:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1313:51:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1384:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1395:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1380:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1380:18:25"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1400:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1373:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1373:34:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1229:9:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1240:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1248:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1259:4:25",
                "type": ""
              }
            ],
            "src": "1139:274:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1513:92:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1523:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1535:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1546:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1523:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1565:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1590:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1583:6:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1583:14:25"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1576:6:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1576:22:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1558:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:41:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1558:41:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1482:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1493:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1504:4:25",
                "type": ""
              }
            ],
            "src": "1418:187:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1739:102:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1749:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1761:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1772:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1757:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1757:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1749:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1791:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1806:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1822:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1827:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1818:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1818:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1831:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1814:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1814:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1802:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1802:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1784:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1784:51:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_REUM_ticket_$4643__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1708:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1719:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1730:4:25",
                "type": ""
              }
            ],
            "src": "1610:231:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2020:228:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2037:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2048:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2030:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2030:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2030:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2071:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2082:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2067:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2067:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2087:2:25",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2060:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2060:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2060:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2110:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2121:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2106:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2106:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2126:34:25",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2099:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2099:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2099:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2181:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2192:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2177:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2197:8:25",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2170:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:36:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2170:36:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2215:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2227:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2238:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2223:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2223:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2215:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1997:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2011:4:25",
                "type": ""
              }
            ],
            "src": "1846:402:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2427:168:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2444:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2455:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2437:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2437:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2437:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2478:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2489:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2474:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2474:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2494:2:25",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2467:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2467:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2467:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2517:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2528:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2513:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2513:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2533:20:25",
                        "type": "",
                        "value": "Vault: non payable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2506:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2506:48:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2506:48:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2563:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2575:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2586:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2571:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2563:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2404:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2418:4:25",
                "type": ""
              }
            ],
            "src": "2253:342:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2774:176:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2791:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2802:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2784:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2784:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2784:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2825:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2836:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2821:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2821:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2841:2:25",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2814:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2814:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2814:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2864:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2875:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2860:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2860:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2880:28:25",
                        "type": "",
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2853:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2853:56:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2853:56:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2918:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2930:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2941:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2926:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2926:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2918:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2751:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2765:4:25",
                "type": ""
              }
            ],
            "src": "2600:350:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3129:182:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3146:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3157:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3139:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3139:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3139:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3180:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3191:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3176:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3176:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3196:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3169:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3169:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3169:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3219:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3230:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3215:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3235:34:25",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3208:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3208:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3208:62:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3279:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3291:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3302:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3287:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3287:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3279:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3106:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3120:4:25",
                "type": ""
              }
            ],
            "src": "2955:356:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3490:171:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3507:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3518:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3500:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3500:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3500:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3541:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3552:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3537:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3537:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3557:2:25",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3530:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3530:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3530:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3580:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3591:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3576:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3576:18:25"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3596:23:25",
                        "type": "",
                        "value": "Vault: Invalid ticker"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3569:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3569:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3569:51:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3629:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3641:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3652:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3637:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3629:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3467:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3481:4:25",
                "type": ""
              }
            ],
            "src": "3316:345:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3767:76:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3777:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3789:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3800:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3785:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3785:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3777:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3819:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3830:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3812:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3812:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3812:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3736:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3747:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3758:4:25",
                "type": ""
              }
            ],
            "src": "3666:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3894:171:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3925:111:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "3946:1:25"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3953:3:25",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3958:10:25",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3949:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3949:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3939:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3939:31:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3939:31:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3990:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3993:4:25",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3983:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3983:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3983:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4018:1:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4021:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4011:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4011:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4011:15:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3914:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3907:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3907:9:25"
                  },
                  "nodeType": "YulIf",
                  "src": "3904:2:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4045:14:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4054:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4057:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4050:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4050:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4045:1:25"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3879:1:25",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3882:1:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3888:1:25",
                "type": ""
              }
            ],
            "src": "3848:217:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_REUM_ticket_$4643__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Vault: non payable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Vault: unauthorized access\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Vault: Invalid ticker\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "518:1076:24:-:0;;;584:16;554:46;;674:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;887:12;:10;:12::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:0;-1:-1:-1;;;;;909:18:0;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:0;942:43;;909:6;;942:43;-1:-1:-1;710:13:24;:20;;-1:-1:-1;;;;;;710:20:24;-1:-1:-1;;;;;710:20:24;;;;;758:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;740:15:24;:35;;-1:-1:-1;;;;;;740:35:24;-1:-1:-1;;;;;740:35:24;;;;;;;;;;-1:-1:-1;518:1076:24;;586:96:11;665:10;586:96;:::o;518:1076:24:-;;;;;;;;:::o;14:310:25:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:25;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:25:o;:::-;518:1076:24;;;;;;",
  "deployedSourceMap": "518:1076:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1556:28;;-1:-1:-1;;;1556:28:24;;;;;;;:::i;:::-;;;;;;;;518:1076;;;;554:46;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1374:138;;;;;;;;;;-1:-1:-1;1374:138:24;;;;;:::i;:::-;;:::i;928:440::-;;;;;;;;;;-1:-1:-1;928:440:24;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1700:145:0:-;;;;;;;;;;;;;:::i;:::-;;1068:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1994:240::-;;;;;;;;;;-1:-1:-1;1994:240:0;;;;;:::i;:::-;;:::i;633:34:24:-;;;;;;;;;;;;;:::i;554:46::-;;;;:::o;1374:138::-;1448:7;1493:12;;1474:16;:31;;;;:::i;:::-;1467:38;;1374:138;;;;:::o;928:440::-;1049:13;;1011:4;;-1:-1:-1;;;;;1049:13:24;1035:10;:27;1027:66;;;;-1:-1:-1;;;1027:66:24;;;;;;;:::i;:::-;-1:-1:-1;;;1107:6:24;:25;1104:257;;;1148:21;1184:12;;1172:9;:24;;;;:::i;:::-;1148:48;-1:-1:-1;1213:17:24;;1210:69;;1232:15;;:47;;-1:-1:-1;;;1232:47:24;;-1:-1:-1;;;;;1232:15:24;;;;:26;;:47;;1259:4;;1265:13;;1232:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1210:69;1300:4;1293:11;;;;;1104:257;1330:31;;-1:-1:-1;;;1330:31:24;;;;;;;:::i;1104:257::-;928:440;;;;;:::o;1700:145:0:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;1068:85::-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;1068:85;:::o;1994:240::-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:0;;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:0::1;;;;;;;:::i;:::-;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;633:34:24:-;;;-1:-1:-1;;;;;633:34:24;;:::o;586:96:11:-;665:10;586:96;:::o;14:175:25:-;84:20;;-1:-1:-1;;;;;133:31:25;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:190::-;;509:2;497:9;488:7;484:23;480:32;477:2;;;530:6;522;515:22;477:2;-1:-1:-1;558:23:25;;467:120;-1:-1:-1;467:120:25:o;592:334::-;;;;738:2;726:9;717:7;713:23;709:32;706:2;;;759:6;751;744:22;706:2;800:9;787:23;777:33;;829:40;865:2;854:9;850:18;829:40;:::i;:::-;819:50;;916:2;905:9;901:18;888:32;878:42;;696:230;;;;;:::o;931:203::-;-1:-1:-1;;;;;1095:32:25;;;;1077:51;;1065:2;1050:18;;1032:102::o;1139:274::-;-1:-1:-1;;;;;1331:32:25;;;;1313:51;;1395:2;1380:18;;1373:34;1301:2;1286:18;;1268:145::o;1418:187::-;1583:14;;1576:22;1558:41;;1546:2;1531:18;;1513:92::o;1846:402::-;2048:2;2030:21;;;2087:2;2067:18;;;2060:30;2126:34;2121:2;2106:18;;2099:62;-1:-1:-1;;;2192:2:25;2177:18;;2170:36;2238:3;2223:19;;2020:228::o;2253:342::-;2455:2;2437:21;;;2494:2;2474:18;;;2467:30;-1:-1:-1;;;2528:2:25;2513:18;;2506:48;2586:2;2571:18;;2427:168::o;2600:350::-;2802:2;2784:21;;;2841:2;2821:18;;;2814:30;2880:28;2875:2;2860:18;;2853:56;2941:2;2926:18;;2774:176::o;2955:356::-;3157:2;3139:21;;;3176:18;;;3169:30;3235:34;3230:2;3215:18;;3208:62;3302:2;3287:18;;3129:182::o;3316:345::-;3518:2;3500:21;;;3557:2;3537:18;;;3530:30;-1:-1:-1;;;3591:2:25;3576:18;;3569:51;3652:2;3637:18;;3490:171::o;3666:177::-;3812:25;;;3800:2;3785:18;;3767:76::o;3848:217::-;;3914:1;3904:2;;-1:-1:-1;;;3939:31:25;;3993:4;3990:1;3983:15;4021:4;3946:1;4011:15;3904:2;-1:-1:-1;4050:9:25;;3894:171::o",
  "source": "// SPDX-License-Identifier: GPL\npragma solidity 0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"./REUM_ticket.sol\";\n\n/// @title Rewardeum Vault v01\n/// @author DrGorilla_md (Tg/Twtr)\n/// @notice vault: minting lottery tickets to win $rsun NFT\n/// @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n/// on a per-asset basis\n/// Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT\ncontract Vault_01 is Ownable {\n\n    uint256 public ticket_price = 3000000000000000;\n    address main_contract;\n    REUM_ticket public ticket_contract;\n\n    constructor(address reum) {\n        main_contract = reum;\n        ticket_contract = new REUM_ticket();\n    }\n\n    /// @notice custom claim, only called by the main_contract \n    /// @dev this part is updated as needed then redeployed/proxied by main\n    function claim(uint256 claimable,  address dest, bytes32 ticker) external returns (bool) {\n        require(msg.sender == main_contract, \"Vault: unauthorized access\");\n\n        if(ticker == bytes32(\"RSUN\")) {\n            uint256 NFT_claimable = claimable / ticket_price;\n            if(NFT_claimable > 0) ticket_contract.mintTicket(dest, NFT_claimable);\n            return true;\n        }\n\n        else revert(\"Vault: Invalid ticker\");\n    }\n\n    function pending_tickets(uint256 amount_claimable) external view returns (uint256) {\n        return amount_claimable / ticket_price;\n    }\n\n    receive () external payable {\n        revert(\"Vault: non payable\");\n    }\n\n}",
  "sourcePath": "/Volumes/T7 Touch/solidity/Rewardeum/contracts/Vault_01.sol",
  "ast": {
    "absolutePath": "project:/contracts/Vault_01.sol",
    "exportedSymbols": {
      "Address": [
        2363
      ],
      "Context": [
        2386
      ],
      "ERC165": [
        2613
      ],
      "ERC721": [
        1537
      ],
      "ERC721Enumerable": [
        2009
      ],
      "IERC165": [
        2625
      ],
      "IERC721": [
        1653
      ],
      "IERC721Enumerable": [
        2040
      ],
      "IERC721Metadata": [
        2067
      ],
      "IERC721Receiver": [
        1671
      ],
      "Ownable": [
        109
      ],
      "REUM_ticket": [
        4643
      ],
      "Strings": [
        2589
      ],
      "Vault_01": [
        8351
      ]
    },
    "id": 8352,
    "license": "GPL",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8247,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:24"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8248,
        "nodeType": "ImportDirective",
        "scope": 8352,
        "sourceUnit": 110,
        "src": "56:52:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8249,
        "nodeType": "ImportDirective",
        "scope": 8352,
        "sourceUnit": 1654,
        "src": "109:58:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/REUM_ticket.sol",
        "file": "./REUM_ticket.sol",
        "id": 8250,
        "nodeType": "ImportDirective",
        "scope": 8352,
        "sourceUnit": 4644,
        "src": "168:27:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8252,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 109,
              "src": "539:7:24"
            },
            "id": 8253,
            "nodeType": "InheritanceSpecifier",
            "src": "539:7:24"
          }
        ],
        "contractDependencies": [
          109,
          2386,
          4643
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8251,
          "nodeType": "StructuredDocumentation",
          "src": "197:321:24",
          "text": "@title Rewardeum Vault v01\n @author DrGorilla_md (Tg/Twtr)\n @notice vault: minting lottery tickets to win $rsun NFT\n @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n on a per-asset basis\n Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT"
        },
        "fullyImplemented": true,
        "id": 8351,
        "linearizedBaseContracts": [
          8351,
          109,
          2386
        ],
        "name": "Vault_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "19d41c69",
            "id": 8256,
            "mutability": "mutable",
            "name": "ticket_price",
            "nodeType": "VariableDeclaration",
            "scope": 8351,
            "src": "554:46:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8254,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33303030303030303030303030303030",
              "id": 8255,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "584:16:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000000000000_by_1",
                "typeString": "int_const 3000000000000000"
              },
              "value": "3000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8258,
            "mutability": "mutable",
            "name": "main_contract",
            "nodeType": "VariableDeclaration",
            "scope": 8351,
            "src": "606:21:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8257,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "606:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f504a9d5",
            "id": 8261,
            "mutability": "mutable",
            "name": "ticket_contract",
            "nodeType": "VariableDeclaration",
            "scope": 8351,
            "src": "633:34:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_REUM_ticket_$4643",
              "typeString": "contract REUM_ticket"
            },
            "typeName": {
              "id": 8260,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8259,
                "name": "REUM_ticket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4643,
                "src": "633:11:24"
              },
              "referencedDeclaration": 4643,
              "src": "633:11:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                "typeString": "contract REUM_ticket"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8277,
              "nodeType": "Block",
              "src": "700:82:24",
              "statements": [
                {
                  "expression": {
                    "id": 8268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8266,
                      "name": "main_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8258,
                      "src": "710:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8267,
                      "name": "reum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8263,
                      "src": "726:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "710:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8269,
                  "nodeType": "ExpressionStatement",
                  "src": "710:20:24"
                },
                {
                  "expression": {
                    "id": 8275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8270,
                      "name": "ticket_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8261,
                      "src": "740:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 8273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "758:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_REUM_ticket_$4643_$",
                          "typeString": "function () returns (contract REUM_ticket)"
                        },
                        "typeName": {
                          "id": 8272,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 8271,
                            "name": "REUM_ticket",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4643,
                            "src": "762:11:24"
                          },
                          "referencedDeclaration": 4643,
                          "src": "762:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                            "typeString": "contract REUM_ticket"
                          }
                        }
                      },
                      "id": 8274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "758:17:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "src": "740:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                      "typeString": "contract REUM_ticket"
                    }
                  },
                  "id": 8276,
                  "nodeType": "ExpressionStatement",
                  "src": "740:35:24"
                }
              ]
            },
            "id": 8278,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8263,
                  "mutability": "mutable",
                  "name": "reum",
                  "nodeType": "VariableDeclaration",
                  "scope": 8278,
                  "src": "686:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:14:24"
            },
            "returnParameters": {
              "id": 8265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "700:0:24"
            },
            "scope": 8351,
            "src": "674:108:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8329,
              "nodeType": "Block",
              "src": "1017:351:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8291,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1035:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1035:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8293,
                          "name": "main_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8258,
                          "src": "1049:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1035:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a20756e617574686f72697a656420616363657373",
                        "id": 8295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:28:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        },
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        }
                      ],
                      "id": 8290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1027:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1027:66:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8297,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:66:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 8303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8298,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8285,
                      "src": "1107:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "5253554e",
                          "id": 8301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1125:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          },
                          "value": "RSUN"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          }
                        ],
                        "id": 8300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1117:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 8299,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1117:7:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1117:15:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1107:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "5661756c743a20496e76616c6964207469636b6572",
                          "id": 8325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1337:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          },
                          "value": "Vault: Invalid ticker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          }
                        ],
                        "id": 8324,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "1330:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 8326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1330:31:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 8327,
                    "nodeType": "ExpressionStatement",
                    "src": "1330:31:24"
                  },
                  "id": 8328,
                  "nodeType": "IfStatement",
                  "src": "1104:257:24",
                  "trueBody": {
                    "id": 8323,
                    "nodeType": "Block",
                    "src": "1134:181:24",
                    "statements": [
                      {
                        "assignments": [
                          8305
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8305,
                            "mutability": "mutable",
                            "name": "NFT_claimable",
                            "nodeType": "VariableDeclaration",
                            "scope": 8323,
                            "src": "1148:21:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8304,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1148:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8309,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8306,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8281,
                            "src": "1172:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 8307,
                            "name": "ticket_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8256,
                            "src": "1184:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1172:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1148:48:24"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8310,
                            "name": "NFT_claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8305,
                            "src": "1213:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 8311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1229:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1213:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8320,
                        "nodeType": "IfStatement",
                        "src": "1210:69:24",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8316,
                                "name": "dest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8283,
                                "src": "1259:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 8317,
                                "name": "NFT_claimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8305,
                                "src": "1265:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 8313,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8261,
                                "src": "1232:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 8315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mintTicket",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4596,
                              "src": "1232:26:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256) external"
                              }
                            },
                            "id": 8318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1232:47:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8319,
                          "nodeType": "ExpressionStatement",
                          "src": "1232:47:24"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 8321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1300:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 8289,
                        "id": 8322,
                        "nodeType": "Return",
                        "src": "1293:11:24"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8279,
              "nodeType": "StructuredDocumentation",
              "src": "788:135:24",
              "text": "@notice custom claim, only called by the main_contract \n @dev this part is updated as needed then redeployed/proxied by main"
            },
            "functionSelector": "306cbb20",
            "id": 8330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8281,
                  "mutability": "mutable",
                  "name": "claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 8330,
                  "src": "943:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8283,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 8330,
                  "src": "963:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8285,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 8330,
                  "src": "977:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8284,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "942:50:24"
            },
            "returnParameters": {
              "id": 8289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8288,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8330,
                  "src": "1011:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8287,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:6:24"
            },
            "scope": 8351,
            "src": "928:440:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8341,
              "nodeType": "Block",
              "src": "1457:55:24",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8337,
                      "name": "amount_claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8332,
                      "src": "1474:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 8338,
                      "name": "ticket_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8256,
                      "src": "1493:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1474:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8336,
                  "id": 8340,
                  "nodeType": "Return",
                  "src": "1467:38:24"
                }
              ]
            },
            "functionSelector": "2f2bcd33",
            "id": 8342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pending_tickets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8332,
                  "mutability": "mutable",
                  "name": "amount_claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "1399:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:26:24"
            },
            "returnParameters": {
              "id": 8336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8335,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "1448:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1447:9:24"
            },
            "scope": 8351,
            "src": "1374:138:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8349,
              "nodeType": "Block",
              "src": "1546:45:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5661756c743a206e6f6e2070617961626c65",
                        "id": 8346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        },
                        "value": "Vault: non payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        }
                      ],
                      "id": 8345,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1556:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 8347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8348,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:28:24"
                }
              ]
            },
            "id": 8350,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1526:2:24"
            },
            "returnParameters": {
              "id": 8344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1546:0:24"
            },
            "scope": 8351,
            "src": "1518:73:24",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8352,
        "src": "518:1076:24"
      }
    ],
    "src": "32:1562:24"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Vault_01.sol",
    "exportedSymbols": {
      "Address": [
        2363
      ],
      "Context": [
        2386
      ],
      "ERC165": [
        2613
      ],
      "ERC721": [
        1537
      ],
      "ERC721Enumerable": [
        2009
      ],
      "IERC165": [
        2625
      ],
      "IERC721": [
        1653
      ],
      "IERC721Enumerable": [
        2040
      ],
      "IERC721Metadata": [
        2067
      ],
      "IERC721Receiver": [
        1671
      ],
      "Ownable": [
        109
      ],
      "REUM_ticket": [
        4643
      ],
      "Strings": [
        2589
      ],
      "Vault_01": [
        8351
      ]
    },
    "id": 8352,
    "license": "GPL",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8247,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:24"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 8248,
        "nodeType": "ImportDirective",
        "scope": 8352,
        "sourceUnit": 110,
        "src": "56:52:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8249,
        "nodeType": "ImportDirective",
        "scope": 8352,
        "sourceUnit": 1654,
        "src": "109:58:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/REUM_ticket.sol",
        "file": "./REUM_ticket.sol",
        "id": 8250,
        "nodeType": "ImportDirective",
        "scope": 8352,
        "sourceUnit": 4644,
        "src": "168:27:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8252,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 109,
              "src": "539:7:24"
            },
            "id": 8253,
            "nodeType": "InheritanceSpecifier",
            "src": "539:7:24"
          }
        ],
        "contractDependencies": [
          109,
          2386,
          4643
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8251,
          "nodeType": "StructuredDocumentation",
          "src": "197:321:24",
          "text": "@title Rewardeum Vault v01\n @author DrGorilla_md (Tg/Twtr)\n @notice vault: minting lottery tickets to win $rsun NFT\n @dev contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms\n on a per-asset basis\n Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT"
        },
        "fullyImplemented": true,
        "id": 8351,
        "linearizedBaseContracts": [
          8351,
          109,
          2386
        ],
        "name": "Vault_01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "19d41c69",
            "id": 8256,
            "mutability": "mutable",
            "name": "ticket_price",
            "nodeType": "VariableDeclaration",
            "scope": 8351,
            "src": "554:46:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8254,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "554:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33303030303030303030303030303030",
              "id": 8255,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "584:16:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000000000000_by_1",
                "typeString": "int_const 3000000000000000"
              },
              "value": "3000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8258,
            "mutability": "mutable",
            "name": "main_contract",
            "nodeType": "VariableDeclaration",
            "scope": 8351,
            "src": "606:21:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8257,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "606:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f504a9d5",
            "id": 8261,
            "mutability": "mutable",
            "name": "ticket_contract",
            "nodeType": "VariableDeclaration",
            "scope": 8351,
            "src": "633:34:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_REUM_ticket_$4643",
              "typeString": "contract REUM_ticket"
            },
            "typeName": {
              "id": 8260,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8259,
                "name": "REUM_ticket",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4643,
                "src": "633:11:24"
              },
              "referencedDeclaration": 4643,
              "src": "633:11:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                "typeString": "contract REUM_ticket"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8277,
              "nodeType": "Block",
              "src": "700:82:24",
              "statements": [
                {
                  "expression": {
                    "id": 8268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8266,
                      "name": "main_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8258,
                      "src": "710:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8267,
                      "name": "reum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8263,
                      "src": "726:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "710:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8269,
                  "nodeType": "ExpressionStatement",
                  "src": "710:20:24"
                },
                {
                  "expression": {
                    "id": 8275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8270,
                      "name": "ticket_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8261,
                      "src": "740:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 8273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "758:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_REUM_ticket_$4643_$",
                          "typeString": "function () returns (contract REUM_ticket)"
                        },
                        "typeName": {
                          "id": 8272,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 8271,
                            "name": "REUM_ticket",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4643,
                            "src": "762:11:24"
                          },
                          "referencedDeclaration": 4643,
                          "src": "762:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                            "typeString": "contract REUM_ticket"
                          }
                        }
                      },
                      "id": 8274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "758:17:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                        "typeString": "contract REUM_ticket"
                      }
                    },
                    "src": "740:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                      "typeString": "contract REUM_ticket"
                    }
                  },
                  "id": 8276,
                  "nodeType": "ExpressionStatement",
                  "src": "740:35:24"
                }
              ]
            },
            "id": 8278,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8263,
                  "mutability": "mutable",
                  "name": "reum",
                  "nodeType": "VariableDeclaration",
                  "scope": 8278,
                  "src": "686:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:14:24"
            },
            "returnParameters": {
              "id": 8265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "700:0:24"
            },
            "scope": 8351,
            "src": "674:108:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8329,
              "nodeType": "Block",
              "src": "1017:351:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8291,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1035:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1035:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 8293,
                          "name": "main_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8258,
                          "src": "1049:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1035:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c743a20756e617574686f72697a656420616363657373",
                        "id": 8295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:28:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        },
                        "value": "Vault: unauthorized access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_942e8731af1f10a6af3330a72ce44ca24f5c4736c874011f954236b25bc21aad",
                          "typeString": "literal_string \"Vault: unauthorized access\""
                        }
                      ],
                      "id": 8290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1027:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1027:66:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8297,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:66:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 8303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8298,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8285,
                      "src": "1107:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "5253554e",
                          "id": 8301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1125:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          },
                          "value": "RSUN"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_37464c5b9594b7c2ceffd775f4fac54eac5a014ef52869f6875503a21f2ea3e6",
                            "typeString": "literal_string \"RSUN\""
                          }
                        ],
                        "id": 8300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1117:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 8299,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1117:7:24",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1117:15:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1107:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "5661756c743a20496e76616c6964207469636b6572",
                          "id": 8325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1337:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          },
                          "value": "Vault: Invalid ticker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_9f15a8a9af848f00808f371aa5d67d7446d4faa5442e9fe317170d6c62a2b399",
                            "typeString": "literal_string \"Vault: Invalid ticker\""
                          }
                        ],
                        "id": 8324,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967277,
                          4294967277
                        ],
                        "referencedDeclaration": 4294967277,
                        "src": "1330:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) pure"
                        }
                      },
                      "id": 8326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1330:31:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 8327,
                    "nodeType": "ExpressionStatement",
                    "src": "1330:31:24"
                  },
                  "id": 8328,
                  "nodeType": "IfStatement",
                  "src": "1104:257:24",
                  "trueBody": {
                    "id": 8323,
                    "nodeType": "Block",
                    "src": "1134:181:24",
                    "statements": [
                      {
                        "assignments": [
                          8305
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8305,
                            "mutability": "mutable",
                            "name": "NFT_claimable",
                            "nodeType": "VariableDeclaration",
                            "scope": 8323,
                            "src": "1148:21:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8304,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1148:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8309,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8306,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8281,
                            "src": "1172:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 8307,
                            "name": "ticket_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8256,
                            "src": "1184:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1172:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1148:48:24"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8310,
                            "name": "NFT_claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8305,
                            "src": "1213:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 8311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1229:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1213:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8320,
                        "nodeType": "IfStatement",
                        "src": "1210:69:24",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8316,
                                "name": "dest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8283,
                                "src": "1259:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 8317,
                                "name": "NFT_claimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8305,
                                "src": "1265:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 8313,
                                "name": "ticket_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8261,
                                "src": "1232:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_REUM_ticket_$4643",
                                  "typeString": "contract REUM_ticket"
                                }
                              },
                              "id": 8315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mintTicket",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4596,
                              "src": "1232:26:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256) external"
                              }
                            },
                            "id": 8318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1232:47:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8319,
                          "nodeType": "ExpressionStatement",
                          "src": "1232:47:24"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 8321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1300:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 8289,
                        "id": 8322,
                        "nodeType": "Return",
                        "src": "1293:11:24"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8279,
              "nodeType": "StructuredDocumentation",
              "src": "788:135:24",
              "text": "@notice custom claim, only called by the main_contract \n @dev this part is updated as needed then redeployed/proxied by main"
            },
            "functionSelector": "306cbb20",
            "id": 8330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8281,
                  "mutability": "mutable",
                  "name": "claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 8330,
                  "src": "943:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8283,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 8330,
                  "src": "963:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8285,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 8330,
                  "src": "977:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8284,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "942:50:24"
            },
            "returnParameters": {
              "id": 8289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8288,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8330,
                  "src": "1011:4:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8287,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:6:24"
            },
            "scope": 8351,
            "src": "928:440:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8341,
              "nodeType": "Block",
              "src": "1457:55:24",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8337,
                      "name": "amount_claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8332,
                      "src": "1474:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 8338,
                      "name": "ticket_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8256,
                      "src": "1493:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1474:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8336,
                  "id": 8340,
                  "nodeType": "Return",
                  "src": "1467:38:24"
                }
              ]
            },
            "functionSelector": "2f2bcd33",
            "id": 8342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pending_tickets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8332,
                  "mutability": "mutable",
                  "name": "amount_claimable",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "1399:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:26:24"
            },
            "returnParameters": {
              "id": 8336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8335,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8342,
                  "src": "1448:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1448:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1447:9:24"
            },
            "scope": 8351,
            "src": "1374:138:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8349,
              "nodeType": "Block",
              "src": "1546:45:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5661756c743a206e6f6e2070617961626c65",
                        "id": 8346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        },
                        "value": "Vault: non payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_55ce375941e47560a7f75e14302f810e1e086c25e8251a077a2b791b7312be71",
                          "typeString": "literal_string \"Vault: non payable\""
                        }
                      ],
                      "id": 8345,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1556:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 8347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1556:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8348,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:28:24"
                }
              ]
            },
            "id": 8350,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1526:2:24"
            },
            "returnParameters": {
              "id": 8344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1546:0:24"
            },
            "scope": 8351,
            "src": "1518:73:24",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8352,
        "src": "518:1076:24"
      }
    ],
    "src": "32:1562:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "97": {
      "events": {},
      "links": {},
      "address": "0xb5d2Dd8ac8C885DE49287442fCA73Ba9fAF9b339",
      "transactionHash": "0x4b614008da4fa7509077cb4cb773d82252eb64a4cf504de461fc36528c4b1c26"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-22T10:15:38.817Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "DrGorilla_md (Tg/Twtr)",
    "details": "contract proxied by the main Reum contract, in order to upgrade vault to new reward mecanisms on a per-asset basis Iteration 01 - $RSUN partnership: lottery tickets for RSUN NFT",
    "kind": "dev",
    "methods": {
      "claim(uint256,address,bytes32)": {
        "details": "this part is updated as needed then redeployed/proxied by main"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Rewardeum Vault v01",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim(uint256,address,bytes32)": {
        "notice": "custom claim, only called by the main_contract "
      }
    },
    "notice": "vault: minting lottery tickets to win $rsun NFT",
    "version": 1
  }
}